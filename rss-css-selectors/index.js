(()=>{"use strict";var e={558:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(537),l=t.n(a),o=t(645),r=t.n(o)()(l());r.push([e.id,".editor {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(30vw + 20%);\n  padding: 10px;\n  border-radius: 5px;\n  background: rgb(21, 21, 21);\n}\n\n\n.html-viewer {\n  background: #2a2a2a;\n  width: 100%;\n  display: flex;\n}\n\n.line-numbers {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 5%;\n  padding: 5px 10px 5px 0;\n  text-align: right;\n  border-right: solid 2px black;\n  font-size: 16px;\n}\n\n.markup {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding-left: 15px;\n  /* font-family: ; */\n  /* align-items: flex-start; */\n}\n\n.markup::before{\n  content: '<table>';\n  margin-left: -10px;\n  padding-top: 10px;\n}\n\n.markup::after{\n  content: '</table>';\n  margin-left: -10px;\n  padding-top: 5px;\n}\n\n.line:hover {\n  filter: brightness(150%);\n  cursor: default;\n}\n\n.line {\n  white-space: pre-wrap;\n  padding-top: 5px;\n}","",{version:3,sources:["webpack://./src/components/editor/editor.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,uBAAuB;EACvB,aAAa;EACb,kBAAkB;EAClB,2BAA2B;AAC7B;;;AAGA;EACE,mBAAmB;EACnB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,qBAAqB;EACrB,SAAS;EACT,uBAAuB;EACvB,iBAAiB;EACjB,6BAA6B;EAC7B,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,kBAAkB;EAClB,mBAAmB;EACnB,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,wBAAwB;EACxB,eAAe;AACjB;;AAEA;EACE,qBAAqB;EACrB,gBAAgB;AAClB",sourcesContent:[".editor {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(30vw + 20%);\n  padding: 10px;\n  border-radius: 5px;\n  background: rgb(21, 21, 21);\n}\n\n\n.html-viewer {\n  background: #2a2a2a;\n  width: 100%;\n  display: flex;\n}\n\n.line-numbers {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 5%;\n  padding: 5px 10px 5px 0;\n  text-align: right;\n  border-right: solid 2px black;\n  font-size: 16px;\n}\n\n.markup {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding-left: 15px;\n  /* font-family: ; */\n  /* align-items: flex-start; */\n}\n\n.markup::before{\n  content: '<table>';\n  margin-left: -10px;\n  padding-top: 10px;\n}\n\n.markup::after{\n  content: '</table>';\n  margin-left: -10px;\n  padding-top: 5px;\n}\n\n.line:hover {\n  filter: brightness(150%);\n  cursor: default;\n}\n\n.line {\n  white-space: pre-wrap;\n  padding-top: 5px;\n}"],sourceRoot:""}]);const s=r},801:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(537),l=t.n(a),o=t(645),r=t.n(o)()(l());r.push([e.id,".level-viewer {\n  padding: 10px 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: start;\n  width: 15%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 85%;\n  background: rgb(26, 25, 25);\n}\n\n.level-viewer__title {\n  color: aqua;\n}","",{version:3,sources:["webpack://./src/components/levelViewer/level-viewer.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,kBAAkB;EAClB,UAAU;EACV,YAAY;EACZ,eAAe;EACf,MAAM;EACN,SAAS;EACT,2BAA2B;AAC7B;;AAEA;EACE,WAAW;AACb",sourcesContent:[".level-viewer {\n  padding: 10px 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: start;\n  width: 15%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 85%;\n  background: rgb(26, 25, 25);\n}\n\n.level-viewer__title {\n  color: aqua;\n}"],sourceRoot:""}]);const s=r},655:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(537),l=t.n(a),o=t(645),r=t.n(o)()(l());r.push([e.id,".table {  \n  width: min-content;\n  position: relative;\n  padding: 1vw 2vw;\n  margin: 4vw 0 5vw 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgb(184, 114, 9);\n  gap: 3vw;\n  transform: perspective(350px) rotateX(15deg);\n  border-radius: 0.3vw;\n  box-shadow: 0px calc(20px + 0.8vw) calc(5px + 0.8vw) rgba(5, 5, 5, 0.6);\n}\n\n.table::after {\n  content: '';  \n  width: calc(100% - 20px + 0.1vw);\n  border-top: calc(2px + 0.5vw) solid rgb(124, 76, 4);\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  position: absolute;\n  top: calc(100% - 0.2vw);\n  left: 0;\n}\n\nbento {\n  display: flex;\n  position: relative;\n  z-index: -1;\n  justify-content: center;\n  align-items: center;\n  width: 9vw;\n  height: 5vw;\n  background-color: rgb(123, 12, 12);\n  border-top: double 2vw rgb(65, 9, 9);\n  border-bottom: double 2vw rgb(65, 9, 9);\n  transition: all ease-in-out .5s;\n}\n\npickle {\n  display: block;\n  position: relative;\n  width: 15%;\n  height: 30%;\n  border-radius: 40px;\n  background: green;\n  border: solid 2px rgb(4, 95, 4);\n  border-bottom: solid 8px rgb(4, 95, 4);\n}\n\napple {\n  display: block;\n  position: relative;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 40px;\n  background: red;\n  border: solid 2px rgb(165, 4, 4);\n  border-width: 1px 3px 6px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  box-shadow: 0px calc(2px + 0.2vw) 5px rgba(0,0,0,.5);\n  transition: all .5s ease-out; \n}\n\napple::after,\npickle::after {\n content: \"\";\n width: 25%;\n height: 25%;\n border-radius: 50%;\n position: absolute;\n top: 10%;\n left: 50%;\n background: rgba(255, 255, 255, 0.496);\n transition: all .5s ease-out; \n}\n\n\nplate {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  z-index: -10;\n  width: 7vw;\n  height: 7vw;\n  border-radius: 50%;\n  background: white;\n  border: solid calc(1px + 0.1vw) rgb(209, 209, 209);\n  border-bottom: solid calc(4px + 0.1vw) rgb(209, 209, 209);\n  box-shadow: 0px calc(5px + 0.2vw) 5px rgba(0,0,0,.2);\n  transition: all .2s ease-out; \n}","",{version:3,sources:["webpack://./src/components/table/table.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;EACnB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,4BAA4B;EAC5B,QAAQ;EACR,4CAA4C;EAC5C,oBAAoB;EACpB,uEAAuE;AACzE;;AAEA;EACE,WAAW;EACX,gCAAgC;EAChC,mDAAmD;EACnD,mCAAmC;EACnC,oCAAoC;EACpC,kBAAkB;EAClB,uBAAuB;EACvB,OAAO;AACT;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,UAAU;EACV,WAAW;EACX,kCAAkC;EAClC,oCAAoC;EACpC,uCAAuC;EACvC,+BAA+B;AACjC;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,mBAAmB;EACnB,iBAAiB;EACjB,+BAA+B;EAC/B,sCAAsC;AACxC;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,mBAAmB;EACnB,eAAe;EACf,gCAAgC;EAChC,yBAAyB;EACzB,sBAAsB;EACtB,4BAA4B;EAC5B,oDAAoD;EACpD,4BAA4B;AAC9B;;AAEA;;CAEC,WAAW;CACX,UAAU;CACV,WAAW;CACX,kBAAkB;CAClB,kBAAkB;CAClB,QAAQ;CACR,SAAS;CACT,sCAAsC;CACtC,4BAA4B;AAC7B;;;AAGA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;EACZ,UAAU;EACV,WAAW;EACX,kBAAkB;EAClB,iBAAiB;EACjB,kDAAkD;EAClD,yDAAyD;EACzD,oDAAoD;EACpD,4BAA4B;AAC9B",sourcesContent:[".table {  \n  width: min-content;\n  position: relative;\n  padding: 1vw 2vw;\n  margin: 4vw 0 5vw 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgb(184, 114, 9);\n  gap: 3vw;\n  transform: perspective(350px) rotateX(15deg);\n  border-radius: 0.3vw;\n  box-shadow: 0px calc(20px + 0.8vw) calc(5px + 0.8vw) rgba(5, 5, 5, 0.6);\n}\n\n.table::after {\n  content: '';  \n  width: calc(100% - 20px + 0.1vw);\n  border-top: calc(2px + 0.5vw) solid rgb(124, 76, 4);\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  position: absolute;\n  top: calc(100% - 0.2vw);\n  left: 0;\n}\n\nbento {\n  display: flex;\n  position: relative;\n  z-index: -1;\n  justify-content: center;\n  align-items: center;\n  width: 9vw;\n  height: 5vw;\n  background-color: rgb(123, 12, 12);\n  border-top: double 2vw rgb(65, 9, 9);\n  border-bottom: double 2vw rgb(65, 9, 9);\n  transition: all ease-in-out .5s;\n}\n\npickle {\n  display: block;\n  position: relative;\n  width: 15%;\n  height: 30%;\n  border-radius: 40px;\n  background: green;\n  border: solid 2px rgb(4, 95, 4);\n  border-bottom: solid 8px rgb(4, 95, 4);\n}\n\napple {\n  display: block;\n  position: relative;\n  width: 2vw;\n  height: 2vw;\n  border-radius: 40px;\n  background: red;\n  border: solid 2px rgb(165, 4, 4);\n  border-width: 1px 3px 6px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  box-shadow: 0px calc(2px + 0.2vw) 5px rgba(0,0,0,.5);\n  transition: all .5s ease-out; \n}\n\napple::after,\npickle::after {\n content: \"\";\n width: 25%;\n height: 25%;\n border-radius: 50%;\n position: absolute;\n top: 10%;\n left: 50%;\n background: rgba(255, 255, 255, 0.496);\n transition: all .5s ease-out; \n}\n\n\nplate {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  z-index: -10;\n  width: 7vw;\n  height: 7vw;\n  border-radius: 50%;\n  background: white;\n  border: solid calc(1px + 0.1vw) rgb(209, 209, 209);\n  border-bottom: solid calc(4px + 0.1vw) rgb(209, 209, 209);\n  box-shadow: 0px calc(5px + 0.2vw) 5px rgba(0,0,0,.2);\n  transition: all .2s ease-out; \n}"],sourceRoot:""}]);const s=r},767:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(537),l=t.n(a),o=t(645),r=t.n(o)()(l());r.push([e.id,"body {\n  background: rgb(42, 34, 28);\n  font-family: Arial, Helvetica, sans-serif;\n  color: #a2a2a2;\n}\n\n\n.main-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 85%;\n  min-height: 100%;\n} \n","",{version:3,sources:["webpack://./src/global.css"],names:[],mappings:"AAAA;EACE,2BAA2B;EAC3B,yCAAyC;EACzC,cAAc;AAChB;;;AAGA;EACE,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,mBAAmB;EACnB,UAAU;EACV,gBAAgB;AAClB",sourcesContent:["body {\n  background: rgb(42, 34, 28);\n  font-family: Arial, Helvetica, sans-serif;\n  color: #a2a2a2;\n}\n\n\n.main-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 85%;\n  min-height: 100%;\n} \n"],sourceRoot:""}]);const s=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,l,o){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var s=0;s<this.length;s++){var p=this[s][0];null!=p&&(r[p]=!0)}for(var i=0;i<e.length;i++){var c=[].concat(e[i]);a&&r[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),l&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=l):c[4]="".concat(l)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(l," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},243:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var a=t(379),l=t.n(a),o=t(795),r=t.n(o),s=t(569),p=t.n(s),i=t(565),c=t.n(i),d=t(216),A=t.n(d),u=t(589),b=t.n(u),f=t(558),m={};m.styleTagTransform=b(),m.setAttributes=c(),m.insert=p().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),l()(f.Z,m);const h=f.Z&&f.Z.locals?f.Z.locals:void 0},593:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var a=t(379),l=t.n(a),o=t(795),r=t.n(o),s=t(569),p=t.n(s),i=t(565),c=t.n(i),d=t(216),A=t.n(d),u=t(589),b=t.n(u),f=t(801),m={};m.styleTagTransform=b(),m.setAttributes=c(),m.insert=p().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),l()(f.Z,m);const h=f.Z&&f.Z.locals?f.Z.locals:void 0},955:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var a=t(379),l=t.n(a),o=t(795),r=t.n(o),s=t(569),p=t.n(s),i=t(565),c=t.n(i),d=t(216),A=t.n(d),u=t(589),b=t.n(u),f=t(655),m={};m.styleTagTransform=b(),m.setAttributes=c(),m.insert=p().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),l()(f.Z,m);const h=f.Z&&f.Z.locals?f.Z.locals:void 0},427:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var a=t(379),l=t.n(a),o=t(795),r=t.n(o),s=t(569),p=t.n(s),i=t(565),c=t.n(i),d=t(216),A=t.n(d),u=t(589),b=t.n(u),f=t(767),m={};m.styleTagTransform=b(),m.setAttributes=c(),m.insert=p().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),l()(f.Z,m);const h=f.Z&&f.Z.locals?f.Z.locals:void 0},379:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var o={},r=[],s=0;s<e.length;s++){var p=e[s],i=a.base?p[0]+a.base:p[0],c=o[i]||0,d="".concat(i," ").concat(c);o[i]=c+1;var A=t(d),u={css:p[1],media:p[2],sourceMap:p[3],supports:p[4],layer:p[5]};if(-1!==A)n[A].references++,n[A].updater(u);else{var b=l(u,a);a.byIndex=s,n.splice(s,0,{identifier:d,updater:b,references:1})}r.push(d)}return r}function l(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,l){var o=a(e=e||[],l=l||{});return function(e){e=e||[];for(var r=0;r<o.length;r++){var s=t(o[r]);n[s].references--}for(var p=a(e,l),i=0;i<o.length;i++){var c=t(o[i]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=p}}},569:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var l=void 0!==t.layer;l&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,l&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},717:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(427);const l=a(t(214)),o=a(t(139)),r=a(t(108)),s=t(159),p=a(t(842));n.default=class{constructor(){this.createView(),this.controller=new p.default}createView(){const e=(0,l.default)({tagName:"div",classNames:["main-container"],parentNode:document.body}),n=o.default,t=r.default,a=s.editor;e.append(n,a),document.body.append(t)}}},842:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});const l=a(t(139)),o=t(159),r=a(t(262));n.default=class{constructor(){this.fillTable(),this.table=l.default,this.insertMarkUp(l.default)}fillTable(){const e=r.default[2].boardMarkup;l.default.insertAdjacentHTML("afterbegin",e)}insertMarkUp(e,n="",t=o.markupSection){[...e.children].forEach((e=>{const a=document.createElement("div");a.classList.add("line");const l=e.getAttribute("elementId");a.setAttribute("elementId",l),a.textContent=`${n}<${e.tagName.toLowerCase()} class="${[...e.classList].join(" ")}"></${e.tagName.toLowerCase()}>`,t.append(a),e.hasChildNodes()&&this.insertMarkUp(e,"   ",a)}))}}},159:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.markupSection=n.editor=void 0,t(243);const l=a(t(214)),o=(0,l.default)({tagName:"div",classNames:["editor"]});n.editor=o;const r=(0,l.default)({tagName:"div",classNames:["css-editor"],parentNode:o}),s=(0,l.default)({tagName:"input",classNames:["css-editor__input"],parentNode:r});s.setAttribute("type","text"),s.setAttribute("placeholder","Type in a CSS selector"),(0,l.default)({tagName:"button",classNames:["css-editor__btn"],textContent:"Enter",parentNode:r});const p=(0,l.default)({tagName:"div",classNames:["html-viewer"],parentNode:o}),i=(0,l.default)({tagName:"div",classNames:["line-numbers"],parentNode:p});for(let e=1;e<=10;e+=1){const n=(0,l.default)({tagName:"div",classNames:["line"],textContent:e});i.append(n)}const c=(0,l.default)({tagName:"div",classNames:["markup"],parentNode:p});n.markupSection=c},108:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(593);const l=a(t(214)),o=(0,l.default)({tagName:"aside",classNames:["level-viewer"],parentNode:document.body});(0,l.default)({tagName:"h2",classNames:["aside"],parentNode:o,textContent:"Level"}),n.default=o},139:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(955);const l=(0,a(t(214)).default)({tagName:"div",classNames:["table"]});!function e(n,t=0){const a=[...n.childNodes];let l=t;for(let n=0;n<a.length;n+=1){const t=a[n];t.nodeType===Node.ELEMENT_NODE&&(t.setAttribute("elementId",l),l+=1,t.hasChildNodes()&&(l=e(t,l)))}return l}(l),n.default=l},214:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){const n=document.createElement(e.tagName);return n.classList.add(...e.classNames),e.textContent&&(n.textContent=e.textContent),e.parentNode&&e.parentNode.append(n),e.eventHandler&&e.eventType&&n.addEventListener(e.eventType,e.eventHandler),n}},262:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.default=[{doThis:"Select the plates",selector:"plate",boardMarkup:"\n    <plate/>\n    <plate/>\n    "},{doThis:"Select the bento boxes",selector:"bento",boardMarkup:"\n    <bento/>\n    <plate/>\n    <bento/>\n    "},{doThis:"Select the fancy plate",selector:"#fancy",boardMarkup:"<bento></bento>\n<plate>\n  <apple></apple>\n</plate>\n<apple></apple>"},{doThis:"Select the apple on the plate",selector:"plate apple",boardMarkup:"\n    <bento/>\n    <plate>\n      <apple/>\n    </plate>\n    <apple/>\n    "},{doThis:"Select the pickle on the fancy plate",selector:"#fancy pickle",boardMarkup:'\n    <bento>\n    <orange/>\n    </bento>\n    <plate id="fancy">\n      <pickle/>\n    </plate>\n    <plate>\n      <pickle/>\n    </plate>\n    '},{doThis:"Select the small apples",selector:".small",boardMarkup:'\n    <apple/>\n    <apple class="small"/>\n    <plate>\n      <apple class="small"/>\n    </plate>\n    <plate/>\n    '},{doThis:"Select the small oranges",selector:"orange.small",boardMarkup:'\n    <apple/>\n    <apple class="small"/>\n    <bento>\n      <orange class="small"/>\n    </bento>\n    <plate>\n      <orange/>\n    </plate>\n    <plate>\n      <orange class="small"/>\n    </plate>'},{doThis:"Select the small oranges in the bentos",selector:"bento orange.small",boardMarkup:'\n    <bento>\n      <orange/>\n    </bento>\n    <orange class="small"/>\n    <bento>\n      <orange class="small"/>\n    </bento>\n    <bento>\n      <apple class="small"/>\n    </bento>\n    <bento>\n      <orange class="small"/>\n    </bento>\n    '},{doThis:"Select all the plates and bentos",selector:"plate,bento",boardMarkup:'\n    <pickle class="small"/>\n    <pickle/>\n    <plate>\n      <pickle/>\n    </plate>\n    <bento>\n      <pickle/>\n    </bento>\n    <plate>\n      <pickle/>\n    </plate>\n    <pickle/>\n    <pickle class="small"/>\n    '},{doThis:"Select all the things!",selector:"*",boardMarkup:'\n    <apple/>\n    <plate>\n      <orange class="small" />\n    </plate>\n    <bento/>\n    <bento>\n      <orange/>\n    </bento>\n    <plate id="fancy"/>\n    '},{doThis:"Select everything on a plate",selector:"plate *",boardMarkup:'\n    <plate id="fancy">\n      <orange class="small"/>\n    </plate>\n    <plate>\n      <pickle/>\n    </plate>\n    <apple class="small"/>\n    <plate>\n      <apple/>\n    </plate>'},{doThis:"Select every apple that's next to a plate",selector:"plate + apple",boardMarkup:'\n    <bento>\n      <apple class="small"/>\n    </bento>\n    <plate />\n    <apple class="small"/>\n    <plate />\n    <apple/>\n    <apple class="small"/>\n    <apple class="small"/>\n    '},{doThis:"Select the pickles beside the bento",selector:"bento ~ pickle",boardMarkup:'\n    <pickle/>\n    <bento>\n      <orange class="small"/>\n    </bento>\n    <pickle class="small"/>\n    <pickle/>\n    <plate>\n      <pickle/>\n    </plate>\n    <plate>\n      <pickle class="small"/>\n    </plate>\n    '},{doThis:"Select the apple directly on a plate",selector:"plate > apple",boardMarkup:'\n    <plate>\n      <bento>\n        <apple/>\n      </bento>\n    </plate>\n    <plate>\n      <apple/>\n    </plate>\n    <plate/>\n    <apple/>\n    <apple class="small"/>\n    '},{doThis:"Select the top orange",selector:"plate :first-child",boardMarkup:'\n    <bento/>\n    <plate />\n    <plate>\n      <orange />\n      <orange />\n      <orange />\n    </plate>\n    <pickle class="small" />\n    '},{doThis:"Select the apple and the pickle on the plates",selector:"plate :only-child",boardMarkup:'\n    <plate>\n      <apple/>\n    </plate>\n    <plate>\n      <pickle />\n    </plate>\n    <bento>\n      <pickle />\n    </bento>\n    <plate>\n      <orange class="small"/>\n      <orange/>\n    </plate>\n    <pickle class="small"/>\n    '},{doThis:"Select the small apple and the pickle",selector:".small:last-child",boardMarkup:'\n    <plate id="fancy">\n      <apple class="small"/>\n    </plate>\n    <plate/>\n    <plate>\n      <orange class="small"/>\n      <orange>\n    </plate>\n    <pickle class="small"/>'},{doThis:"Select the 3rd plate",selector:":nth-child(3)",boardMarkup:'\n    <plate/>\n    <plate/>\n    <plate/>\n    <plate id="fancy"/>\n    '},{doThis:"Select the 1st bento",selector:"bento:nth-last-child(3)",boardMarkup:"\n    <plate/>\n    <bento/>\n    <plate>\n      <orange/>\n      <orange/>\n      <orange/>\n    </plate>\n    <bento/>\n    "},{doThis:"Select first apple",selector:"apple:first-of-type",boardMarkup:'\n    <orange class="small"/>\n    <apple/>\n    <apple class="small"/>\n    <apple/>\n    <apple class="small"/>\n    <plate>\n      <orange class="small"/>\n      <orange/>\n    </plate>\n    '},{doThis:"Select all even plates",selector:"plate:nth-of-type(even)",boardMarkup:'\n    <plate/>\n    <plate/>\n    <plate/>\n    <plate/>\n    <plate id="fancy"/>\n    <plate/>\n    '},{doThis:"Select every 2nd plate, starting from the 3rd",selector:"plate:nth-of-type(2n+3)",boardMarkup:'\n    <plate/>\n    <plate>\n      <pickle class="small" />\n    </plate>\n    <plate>\n      <apple class="small" />\n    </plate>\n    <plate/>\n    <plate>\n      <apple />\n    </plate>\n    <plate/>\n    '},{selector:"apple:only-of-type",doThis:"Select the apple on the middle plate",boardMarkup:'\n    <plate id="fancy">\n      <apple class="small" />\n      <apple />\n    </plate>\n    <plate>\n      <apple class="small" />\n    </plate>\n    <plate>\n      <pickle />\n    </plate>\n    '},{doThis:"Select the last apple and orange",selector:".small:last-of-type",boardMarkup:'\n    <orange class="small"/>\n    <orange class="small" />\n    <pickle />\n    <pickle />\n    <apple class="small" />\n    <apple class="small" />\n    '},{doThis:"Select the empty bentos",selector:"bento:empty",boardMarkup:'\n    <bento/>\n    <bento>\n      <pickle class="small"/>\n    </bento>\n    <plate/>\n    <bento/>'},{doThis:"Select the big apples",selector:"apple:not(.small)",boardMarkup:'\n    <plate id="fancy">\n      <apple class="small" />\n    </plate>\n    <plate>\n      <apple />\n    </plate>\n    <apple />\n    <plate>\n      <orange class="small" />\n    </plate>\n    <pickle class="small" />\n    '},{doThis:"Select the items for someone",selector:"[for]",boardMarkup:'\n    <bento><apple class="small"/></bento>\n    <apple for="Ethan"/>\n    <plate for="Alice"><pickle/></plate>\n    <bento for="Clara"><orange/></bento>\n    <pickle/>'},{doThis:"Select the plates for someone",selector:"plate[for]",boardMarkup:'\n    <plate for="Sarah"><pickle/></plate>\n    <plate for="Luke"><apple/></plate>\n    <plate/>\n    <bento for="Steve"><orange/></bento>\n    '},{doThis:"Select Vitaly's meal",selector:"[for=Vitaly]",boardMarkup:'\n    <apple for="Alexei" />\n    <bento for="Albina"><apple /></bento>\n    <bento for="Vitaly"><orange/></bento>\n    <pickle/>\n    '},{doThis:"Select the items for names that start with 'Sa'",selector:'[for^="Sa"]',boardMarkup:'\n    <plate for="Sam"><pickle/></plate>\n    <bento for="Sarah"><apple class="small"/></bento>\n    <bento for="Mary"><orange/></bento>\n    '},{doThis:"Select the items for names that end with 'ato'",selector:'[for$="ato"]',boardMarkup:'\n    <apple class="small"/>\n    <bento for="Hayato"><pickle/></bento>\n    <apple for="Ryota"></apple>\n    <plate for="Minato"><orange/></plate>\n    <pickle class="small"/>\n    '},{doThis:"Select the meals for names that contain 'obb'",selector:'[for*="obb"]',boardMarkup:'\n    <bento for="Robbie"><apple /></bento>\n    <bento for="Timmy"><pickle /></bento>\n    <bento for="Bobby"><orange /></bento>\n    '}]},607:function(e,n,t){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),new(a(t(717)).default),alert("Дорогой Reviwer! Eсли у тебя есть такая возможность, пожалуйста отложи свою проверку до вечера 6.03. Буду безмерно благодарен)) Мой discord: @SadJoeBright#6933; telegram: @sadjoebright")}},n={};function t(a){var l=n[a];if(void 0!==l)return l.exports;var o=n[a]={id:a,exports:{}};return e[a].call(o.exports,o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.nc=void 0,t(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQ3RLLEVBQVN3SyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRTFLLEVBQVN5SyxJQUM1RXhFLE9BQU9DLGVBQWVsRyxFQUFTeUssRUFBSyxDQUFFRSxZQUFZLEVBQU1DLElBQUtKLEVBQVdDLElBRTFFLEVDTkRWLEVBQW9CVyxFQUFJLENBQUMxSCxFQUFLNkgsSUFBVTVFLE9BQU82RSxVQUFVQyxlQUFlWixLQUFLbkgsRUFBSzZILEdDQ2xGZCxFQUFvQmlCLEVBQUtoTCxJQUNILG9CQUFYaUwsUUFBMEJBLE9BQU9DLGFBQzFDakYsT0FBT0MsZUFBZWxHLEVBQVNpTCxPQUFPQyxZQUFhLENBQUUvRSxNQUFPLFdBRTdERixPQUFPQyxlQUFlbEcsRUFBUyxhQUFjLENBQUVtRyxPQUFPLEdBQU8sRUNMOUQ0RCxFQUFvQm9CLFFBQUtqSyxFQ0dDNkksRUFBb0IsSSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2NvbXBvbmVudHMvZWRpdG9yL2VkaXRvci5jc3MiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9zcmMvY29tcG9uZW50cy9sZXZlbFZpZXdlci9sZXZlbC12aWV3ZXIuY3NzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2NvbXBvbmVudHMvdGFibGUvdGFibGUuY3NzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2dsb2JhbC5jc3MiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9zcmMvY29tcG9uZW50cy9lZGl0b3IvZWRpdG9yLmNzcz81ODZmIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2NvbXBvbmVudHMvbGV2ZWxWaWV3ZXIvbGV2ZWwtdmlld2VyLmNzcz9iOGM1Iiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2NvbXBvbmVudHMvdGFibGUvdGFibGUuY3NzPzE4ZTgiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9zcmMvZ2xvYmFsLmNzcz9kM2JjIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9zcmMvY29tcG9uZW50cy9hcHAvYXBwLnRzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2NvbXBvbmVudHMvY29udHJvbGxlci9jb250cm9sbGVyLnRzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2NvbXBvbmVudHMvZWRpdG9yL2VkaXRvci50cyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL3NyYy9jb21wb25lbnRzL2xldmVsVmlld2VyL2xldmVsLXZpZXdlci50cyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL3NyYy9jb21wb25lbnRzL3RhYmxlL3RhYmxlLnRzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vc3JjL2NvbXBvbmVudHMvdXRpbHMvY3JlYXRlLWVsZW1lbnQudHMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9zcmMvZGF0YS9sZXZlbHMudHMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuZWRpdG9yIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiBjYWxjKDMwdncgKyAyMCUpO1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJhY2tncm91bmQ6IHJnYigyMSwgMjEsIDIxKTtcbn1cblxuXG4uaHRtbC12aWV3ZXIge1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmxpbmUtbnVtYmVycyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgd2lkdGg6IDUlO1xuICBwYWRkaW5nOiA1cHggMTBweCA1cHggMDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIGJvcmRlci1yaWdodDogc29saWQgMnB4IGJsYWNrO1xuICBmb250LXNpemU6IDE2cHg7XG59XG5cbi5tYXJrdXAge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIC8qIGZvbnQtZmFtaWx5OiA7ICovXG4gIC8qIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyAqL1xufVxuXG4ubWFya3VwOjpiZWZvcmV7XG4gIGNvbnRlbnQ6ICc8dGFibGU+JztcbiAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xuICBwYWRkaW5nLXRvcDogMTBweDtcbn1cblxuLm1hcmt1cDo6YWZ0ZXJ7XG4gIGNvbnRlbnQ6ICc8L3RhYmxlPic7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgcGFkZGluZy10b3A6IDVweDtcbn1cblxuLmxpbmU6aG92ZXIge1xuICBmaWx0ZXI6IGJyaWdodG5lc3MoMTUwJSk7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLmxpbmUge1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy9lZGl0b3IvZWRpdG9yLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2Qix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQiwyQkFBMkI7QUFDN0I7OztBQUdBO0VBQ0UsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHFCQUFxQjtFQUNyQixTQUFTO0VBQ1QsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQiw2QkFBNkI7RUFDN0IsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLDJCQUEyQjtFQUMzQixrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixnQkFBZ0I7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmVkaXRvciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHdpZHRoOiBjYWxjKDMwdncgKyAyMCUpO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGJhY2tncm91bmQ6IHJnYigyMSwgMjEsIDIxKTtcXG59XFxuXFxuXFxuLmh0bWwtdmlld2VyIHtcXG4gIGJhY2tncm91bmQ6ICMyYTJhMmE7XFxuICB3aWR0aDogMTAwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi5saW5lLW51bWJlcnMge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XFxuICB3aWR0aDogNSU7XFxuICBwYWRkaW5nOiA1cHggMTBweCA1cHggMDtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgYm9yZGVyLXJpZ2h0OiBzb2xpZCAycHggYmxhY2s7XFxuICBmb250LXNpemU6IDE2cHg7XFxufVxcblxcbi5tYXJrdXAge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gIHBhZGRpbmctbGVmdDogMTVweDtcXG4gIC8qIGZvbnQtZmFtaWx5OiA7ICovXFxuICAvKiBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgKi9cXG59XFxuXFxuLm1hcmt1cDo6YmVmb3Jle1xcbiAgY29udGVudDogJzx0YWJsZT4nO1xcbiAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xcbiAgcGFkZGluZy10b3A6IDEwcHg7XFxufVxcblxcbi5tYXJrdXA6OmFmdGVye1xcbiAgY29udGVudDogJzwvdGFibGU+JztcXG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcXG4gIHBhZGRpbmctdG9wOiA1cHg7XFxufVxcblxcbi5saW5lOmhvdmVyIHtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxNTAlKTtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG59XFxuXFxuLmxpbmUge1xcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xcbiAgcGFkZGluZy10b3A6IDVweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAubGV2ZWwtdmlld2VyIHtcbiAgcGFkZGluZzogMTBweCAxNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBzdGFydDtcbiAgd2lkdGg6IDE1JTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogODUlO1xuICBiYWNrZ3JvdW5kOiByZ2IoMjYsIDI1LCAyNSk7XG59XG5cbi5sZXZlbC12aWV3ZXJfX3RpdGxlIHtcbiAgY29sb3I6IGFxdWE7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy9sZXZlbFZpZXdlci9sZXZlbC12aWV3ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsWUFBWTtFQUNaLGVBQWU7RUFDZixNQUFNO0VBQ04sU0FBUztFQUNULDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLFdBQVc7QUFDYlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubGV2ZWwtdmlld2VyIHtcXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xcbiAgd2lkdGg6IDE1JTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDg1JTtcXG4gIGJhY2tncm91bmQ6IHJnYigyNiwgMjUsIDI1KTtcXG59XFxuXFxuLmxldmVsLXZpZXdlcl9fdGl0bGUge1xcbiAgY29sb3I6IGFxdWE7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLnRhYmxlIHsgIFxuICB3aWR0aDogbWluLWNvbnRlbnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMXZ3IDJ2dztcbiAgbWFyZ2luOiA0dncgMCA1dncgMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiByZ2IoMTg0LCAxMTQsIDkpO1xuICBnYXA6IDN2dztcbiAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSgzNTBweCkgcm90YXRlWCgxNWRlZyk7XG4gIGJvcmRlci1yYWRpdXM6IDAuM3Z3O1xuICBib3gtc2hhZG93OiAwcHggY2FsYygyMHB4ICsgMC44dncpIGNhbGMoNXB4ICsgMC44dncpIHJnYmEoNSwgNSwgNSwgMC42KTtcbn1cblxuLnRhYmxlOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnOyAgXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4ICsgMC4xdncpO1xuICBib3JkZXItdG9wOiBjYWxjKDJweCArIDAuNXZ3KSBzb2xpZCByZ2IoMTI0LCA3NiwgNCk7XG4gIGJvcmRlci1sZWZ0OiAxMHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItcmlnaHQ6IDEwcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKDEwMCUgLSAwLjJ2dyk7XG4gIGxlZnQ6IDA7XG59XG5cbmJlbnRvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAtMTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiA5dnc7XG4gIGhlaWdodDogNXZ3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTIzLCAxMiwgMTIpO1xuICBib3JkZXItdG9wOiBkb3VibGUgMnZ3IHJnYig2NSwgOSwgOSk7XG4gIGJvcmRlci1ib3R0b206IGRvdWJsZSAydncgcmdiKDY1LCA5LCA5KTtcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IC41cztcbn1cblxucGlja2xlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDE1JTtcbiAgaGVpZ2h0OiAzMCU7XG4gIGJvcmRlci1yYWRpdXM6IDQwcHg7XG4gIGJhY2tncm91bmQ6IGdyZWVuO1xuICBib3JkZXI6IHNvbGlkIDJweCByZ2IoNCwgOTUsIDQpO1xuICBib3JkZXItYm90dG9tOiBzb2xpZCA4cHggcmdiKDQsIDk1LCA0KTtcbn1cblxuYXBwbGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMnZ3O1xuICBoZWlnaHQ6IDJ2dztcbiAgYm9yZGVyLXJhZGl1czogNDBweDtcbiAgYmFja2dyb3VuZDogcmVkO1xuICBib3JkZXI6IHNvbGlkIDJweCByZ2IoMTY1LCA0LCA0KTtcbiAgYm9yZGVyLXdpZHRoOiAxcHggM3B4IDZweDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYm94LXNoYWRvdzogMHB4IGNhbGMoMnB4ICsgMC4ydncpIDVweCByZ2JhKDAsMCwwLC41KTtcbiAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlLW91dDsgXG59XG5cbmFwcGxlOjphZnRlcixcbnBpY2tsZTo6YWZ0ZXIge1xuIGNvbnRlbnQ6IFwiXCI7XG4gd2lkdGg6IDI1JTtcbiBoZWlnaHQ6IDI1JTtcbiBib3JkZXItcmFkaXVzOiA1MCU7XG4gcG9zaXRpb246IGFic29sdXRlO1xuIHRvcDogMTAlO1xuIGxlZnQ6IDUwJTtcbiBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNDk2KTtcbiB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2Utb3V0OyBcbn1cblxuXG5wbGF0ZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IC0xMDtcbiAgd2lkdGg6IDd2dztcbiAgaGVpZ2h0OiA3dnc7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlcjogc29saWQgY2FsYygxcHggKyAwLjF2dykgcmdiKDIwOSwgMjA5LCAyMDkpO1xuICBib3JkZXItYm90dG9tOiBzb2xpZCBjYWxjKDRweCArIDAuMXZ3KSByZ2IoMjA5LCAyMDksIDIwOSk7XG4gIGJveC1zaGFkb3c6IDBweCBjYWxjKDVweCArIDAuMnZ3KSA1cHggcmdiYSgwLDAsMCwuMik7XG4gIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZS1vdXQ7IFxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvdGFibGUvdGFibGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLDRCQUE0QjtFQUM1QixRQUFRO0VBQ1IsNENBQTRDO0VBQzVDLG9CQUFvQjtFQUNwQix1RUFBdUU7QUFDekU7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0NBQWdDO0VBQ2hDLG1EQUFtRDtFQUNuRCxtQ0FBbUM7RUFDbkMsb0NBQW9DO0VBQ3BDLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsT0FBTztBQUNUOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsV0FBVztFQUNYLGtDQUFrQztFQUNsQyxvQ0FBb0M7RUFDcEMsdUNBQXVDO0VBQ3ZDLCtCQUErQjtBQUNqQzs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLFdBQVc7RUFDWCxtQkFBbUI7RUFDbkIsaUJBQWlCO0VBQ2pCLCtCQUErQjtFQUMvQixzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZixnQ0FBZ0M7RUFDaEMseUJBQXlCO0VBQ3pCLHNCQUFzQjtFQUN0Qiw0QkFBNEI7RUFDNUIsb0RBQW9EO0VBQ3BELDRCQUE0QjtBQUM5Qjs7QUFFQTs7Q0FFQyxXQUFXO0NBQ1gsVUFBVTtDQUNWLFdBQVc7Q0FDWCxrQkFBa0I7Q0FDbEIsa0JBQWtCO0NBQ2xCLFFBQVE7Q0FDUixTQUFTO0NBQ1Qsc0NBQXNDO0NBQ3RDLDRCQUE0QjtBQUM3Qjs7O0FBR0E7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFVBQVU7RUFDVixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixrREFBa0Q7RUFDbEQseURBQXlEO0VBQ3pELG9EQUFvRDtFQUNwRCw0QkFBNEI7QUFDOUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLnRhYmxlIHsgIFxcbiAgd2lkdGg6IG1pbi1jb250ZW50O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgcGFkZGluZzogMXZ3IDJ2dztcXG4gIG1hcmdpbjogNHZ3IDAgNXZ3IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQ6IHJnYigxODQsIDExNCwgOSk7XFxuICBnYXA6IDN2dztcXG4gIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoMzUwcHgpIHJvdGF0ZVgoMTVkZWcpO1xcbiAgYm9yZGVyLXJhZGl1czogMC4zdnc7XFxuICBib3gtc2hhZG93OiAwcHggY2FsYygyMHB4ICsgMC44dncpIGNhbGMoNXB4ICsgMC44dncpIHJnYmEoNSwgNSwgNSwgMC42KTtcXG59XFxuXFxuLnRhYmxlOjphZnRlciB7XFxuICBjb250ZW50OiAnJzsgIFxcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHggKyAwLjF2dyk7XFxuICBib3JkZXItdG9wOiBjYWxjKDJweCArIDAuNXZ3KSBzb2xpZCByZ2IoMTI0LCA3NiwgNCk7XFxuICBib3JkZXItbGVmdDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1yaWdodDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogY2FsYygxMDAlIC0gMC4ydncpO1xcbiAgbGVmdDogMDtcXG59XFxuXFxuYmVudG8ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHotaW5kZXg6IC0xO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDl2dztcXG4gIGhlaWdodDogNXZ3O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEyMywgMTIsIDEyKTtcXG4gIGJvcmRlci10b3A6IGRvdWJsZSAydncgcmdiKDY1LCA5LCA5KTtcXG4gIGJvcmRlci1ib3R0b206IGRvdWJsZSAydncgcmdiKDY1LCA5LCA5KTtcXG4gIHRyYW5zaXRpb246IGFsbCBlYXNlLWluLW91dCAuNXM7XFxufVxcblxcbnBpY2tsZSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiAxNSU7XFxuICBoZWlnaHQ6IDMwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDQwcHg7XFxuICBiYWNrZ3JvdW5kOiBncmVlbjtcXG4gIGJvcmRlcjogc29saWQgMnB4IHJnYig0LCA5NSwgNCk7XFxuICBib3JkZXItYm90dG9tOiBzb2xpZCA4cHggcmdiKDQsIDk1LCA0KTtcXG59XFxuXFxuYXBwbGUge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB3aWR0aDogMnZ3O1xcbiAgaGVpZ2h0OiAydnc7XFxuICBib3JkZXItcmFkaXVzOiA0MHB4O1xcbiAgYmFja2dyb3VuZDogcmVkO1xcbiAgYm9yZGVyOiBzb2xpZCAycHggcmdiKDE2NSwgNCwgNCk7XFxuICBib3JkZXItd2lkdGg6IDFweCAzcHggNnB4O1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBib3gtc2hhZG93OiAwcHggY2FsYygycHggKyAwLjJ2dykgNXB4IHJnYmEoMCwwLDAsLjUpO1xcbiAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlLW91dDsgXFxufVxcblxcbmFwcGxlOjphZnRlcixcXG5waWNrbGU6OmFmdGVyIHtcXG4gY29udGVudDogXFxcIlxcXCI7XFxuIHdpZHRoOiAyNSU7XFxuIGhlaWdodDogMjUlO1xcbiBib3JkZXItcmFkaXVzOiA1MCU7XFxuIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gdG9wOiAxMCU7XFxuIGxlZnQ6IDUwJTtcXG4gYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ5Nik7XFxuIHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZS1vdXQ7IFxcbn1cXG5cXG5cXG5wbGF0ZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgei1pbmRleDogLTEwO1xcbiAgd2lkdGg6IDd2dztcXG4gIGhlaWdodDogN3Z3O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxuICBib3JkZXI6IHNvbGlkIGNhbGMoMXB4ICsgMC4xdncpIHJnYigyMDksIDIwOSwgMjA5KTtcXG4gIGJvcmRlci1ib3R0b206IHNvbGlkIGNhbGMoNHB4ICsgMC4xdncpIHJnYigyMDksIDIwOSwgMjA5KTtcXG4gIGJveC1zaGFkb3c6IDBweCBjYWxjKDVweCArIDAuMnZ3KSA1cHggcmdiYSgwLDAsMCwuMik7XFxuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2Utb3V0OyBcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcbiAgYmFja2dyb3VuZDogcmdiKDQyLCAzNCwgMjgpO1xuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICNhMmEyYTI7XG59XG5cblxuLm1haW4tY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogODUlO1xuICBtaW4taGVpZ2h0OiAxMDAlO1xufSBcbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2dsb2JhbC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSwyQkFBMkI7RUFDM0IseUNBQXlDO0VBQ3pDLGNBQWM7QUFDaEI7OztBQUdBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxuICBiYWNrZ3JvdW5kOiByZ2IoNDIsIDM0LCAyOCk7XFxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcXG4gIGNvbG9yOiAjYTJhMmEyO1xcbn1cXG5cXG5cXG4ubWFpbi1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDg1JTtcXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XFxufSBcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9lZGl0b3IuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9lZGl0b3IuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2xldmVsLXZpZXdlci5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2xldmVsLXZpZXdlci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdGFibGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90YWJsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZ2xvYmFsLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZ2xvYmFsLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiBlc2xpbnQtZGlzYWJsZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzICovXG5yZXF1aXJlKFwiLi4vLi4vZ2xvYmFsLmNzc1wiKTtcbmNvbnN0IGNyZWF0ZV9lbGVtZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3V0aWxzL2NyZWF0ZS1lbGVtZW50XCIpKTtcbmNvbnN0IHRhYmxlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3RhYmxlL3RhYmxlXCIpKTtcbmNvbnN0IGxldmVsX3ZpZXdlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9sZXZlbFZpZXdlci9sZXZlbC12aWV3ZXJcIikpO1xuY29uc3QgZWRpdG9yXzEgPSByZXF1aXJlKFwiLi4vZWRpdG9yL2VkaXRvclwiKTtcbmNvbnN0IGNvbnRyb2xsZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vY29udHJvbGxlci9jb250cm9sbGVyXCIpKTtcbmNsYXNzIEFwcCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY3JlYXRlVmlldygpO1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIgPSBuZXcgY29udHJvbGxlcl8xLmRlZmF1bHQoKTtcbiAgICB9XG4gICAgY3JlYXRlVmlldygpIHtcbiAgICAgICAgY29uc3QgbWFpbkNvbnRhaW5lciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmRlZmF1bHQpKHtcbiAgICAgICAgICAgIHRhZ05hbWU6ICdkaXYnLFxuICAgICAgICAgICAgY2xhc3NOYW1lczogWydtYWluLWNvbnRhaW5lciddLFxuICAgICAgICAgICAgcGFyZW50Tm9kZTogZG9jdW1lbnQuYm9keSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHRhYmxlVmlldyA9IHRhYmxlXzEuZGVmYXVsdDtcbiAgICAgICAgY29uc3QgbGV2ZWxWaWV3ID0gbGV2ZWxfdmlld2VyXzEuZGVmYXVsdDtcbiAgICAgICAgY29uc3QgZWRpdG9yVmlldyA9IGVkaXRvcl8xLmVkaXRvcjtcbiAgICAgICAgbWFpbkNvbnRhaW5lci5hcHBlbmQodGFibGVWaWV3LCBlZGl0b3JWaWV3KTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmQobGV2ZWxWaWV3KTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBBcHA7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRhYmxlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3RhYmxlL3RhYmxlXCIpKTtcbmNvbnN0IGVkaXRvcl8xID0gcmVxdWlyZShcIi4uL2VkaXRvci9lZGl0b3JcIik7XG5jb25zdCBsZXZlbHNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vZGF0YS9sZXZlbHNcIikpO1xuY29uc3QgY3VycmVudExldmVsID0gMztcbmNsYXNzIENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmZpbGxUYWJsZSgpO1xuICAgICAgICB0aGlzLnRhYmxlID0gdGFibGVfMS5kZWZhdWx0O1xuICAgICAgICB0aGlzLmluc2VydE1hcmtVcCh0YWJsZV8xLmRlZmF1bHQpO1xuICAgIH1cbiAgICBmaWxsVGFibGUoKSB7XG4gICAgICAgIGNvbnN0IG1hcmtVcCA9IGxldmVsc18xLmRlZmF1bHRbY3VycmVudExldmVsIC0gMV0uYm9hcmRNYXJrdXA7XG4gICAgICAgIHRhYmxlXzEuZGVmYXVsdC5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBtYXJrVXApO1xuICAgIH1cbiAgICBpbnNlcnRNYXJrVXAoZWxlbWVudCwgaW50ZW50ID0gJycsIHBhcmVudCA9IGVkaXRvcl8xLm1hcmt1cFNlY3Rpb24pIHtcbiAgICAgICAgWy4uLmVsZW1lbnQuY2hpbGRyZW5dLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBsaW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICBsaW5lLmNsYXNzTGlzdC5hZGQoJ2xpbmUnKTtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRJZCA9IGNoaWxkLmdldEF0dHJpYnV0ZSgnZWxlbWVudElkJyk7XG4gICAgICAgICAgICBsaW5lLnNldEF0dHJpYnV0ZSgnZWxlbWVudElkJywgZWxlbWVudElkKTtcbiAgICAgICAgICAgIGxpbmUudGV4dENvbnRlbnQgPSBgJHtpbnRlbnR9PCR7Y2hpbGQudGFnTmFtZS50b0xvd2VyQ2FzZSgpfSBjbGFzcz1cIiR7Wy4uLmNoaWxkLmNsYXNzTGlzdF0uam9pbignICcpfVwiPjwvJHtjaGlsZC50YWdOYW1lLnRvTG93ZXJDYXNlKCl9PmA7XG4gICAgICAgICAgICBwYXJlbnQuYXBwZW5kKGxpbmUpO1xuICAgICAgICAgICAgaWYgKGNoaWxkLmhhc0NoaWxkTm9kZXMoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5zZXJ0TWFya1VwKGNoaWxkLCAnICAgJywgbGluZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IENvbnRyb2xsZXI7XG4vLyBmdW5jdGlvbiBpbnNlcnRNYXJrVXAoZWxlbWVudDogSFRNTEVsZW1lbnQsIGludGVudCA9ICcnLCBwYXJlbnQgPSBtYXJrdXBTZWN0aW9uKTogdm9pZCB7XG4vLyAgIFsuLi5lbGVtZW50LmNoaWxkcmVuXS5mb3JFYWNoKChjaGlsZCkgPT4ge1xuLy8gICAgIGNvbnN0IGxpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbi8vICAgICBsaW5lLmNsYXNzTGlzdC5hZGQoJ2xpbmUnKTtcbi8vICAgICBjb25zdCBlbGVtZW50SWQgPSBjaGlsZC5nZXRBdHRyaWJ1dGUoJ2VsZW1lbnRJZCcpO1xuLy8gICAgIGxpbmUuc2V0QXR0cmlidXRlKCdlbGVtZW50SWQnLCBlbGVtZW50SWQpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1sZW5cbi8vICAgICBsaW5lLnRleHRDb250ZW50ID0gYCR7aW50ZW50fTwke2NoaWxkLnRhZ05hbWUudG9Mb3dlckNhc2UoKX0gY2xhc3M9XCIke1suLi5jaGlsZC5jbGFzc0xpc3RdLmpvaW4oJyAnKX1cIj48LyR7Y2hpbGQudGFnTmFtZS50b0xvd2VyQ2FzZSgpfT5gO1xuLy8gICAgIHBhcmVudC5hcHBlbmQobGluZSk7XG4vLyAgICAgaWYgKGNoaWxkLmhhc0NoaWxkTm9kZXMoKSkge1xuLy8gICAgICAgaW5zZXJ0TWFya1VwKGNoaWxkIGFzIEhUTUxFbGVtZW50LCAnICAgJywgbGluZSk7XG4vLyAgICAgfVxuLy8gICB9KTtcbi8vIH1cbi8vIGluc2VydE1hcmtVcCh0YWJsZSk7XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWFya3VwU2VjdGlvbiA9IGV4cG9ydHMuZWRpdG9yID0gdm9pZCAwO1xucmVxdWlyZShcIi4vZWRpdG9yLmNzc1wiKTtcbmNvbnN0IGNyZWF0ZV9lbGVtZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3V0aWxzL2NyZWF0ZS1lbGVtZW50XCIpKTtcbi8vIGltcG9ydCB0YWJsZSBmcm9tICcuLi90YWJsZS90YWJsZSc7XG5jb25zdCBlZGl0b3IgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5kZWZhdWx0KSh7XG4gICAgdGFnTmFtZTogJ2RpdicsXG4gICAgY2xhc3NOYW1lczogWydlZGl0b3InXSxcbn0pO1xuZXhwb3J0cy5lZGl0b3IgPSBlZGl0b3I7XG5jb25zdCBjc3NFZGl0b3IgPSAoMCwgY3JlYXRlX2VsZW1lbnRfMS5kZWZhdWx0KSh7XG4gICAgdGFnTmFtZTogJ2RpdicsXG4gICAgY2xhc3NOYW1lczogWydjc3MtZWRpdG9yJ10sXG4gICAgcGFyZW50Tm9kZTogZWRpdG9yLFxufSk7XG5jb25zdCB0ZXh0QXJlYSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmRlZmF1bHQpKHtcbiAgICB0YWdOYW1lOiAnaW5wdXQnLFxuICAgIGNsYXNzTmFtZXM6IFsnY3NzLWVkaXRvcl9faW5wdXQnXSxcbiAgICBwYXJlbnROb2RlOiBjc3NFZGl0b3IsXG59KTtcbnRleHRBcmVhLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG50ZXh0QXJlYS5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywgJ1R5cGUgaW4gYSBDU1Mgc2VsZWN0b3InKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmNvbnN0IGVkaXRvckJ0biA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmRlZmF1bHQpKHtcbiAgICB0YWdOYW1lOiAnYnV0dG9uJyxcbiAgICBjbGFzc05hbWVzOiBbJ2Nzcy1lZGl0b3JfX2J0biddLFxuICAgIHRleHRDb250ZW50OiAnRW50ZXInLFxuICAgIHBhcmVudE5vZGU6IGNzc0VkaXRvcixcbn0pO1xuY29uc3QgaHRtbFZpZXdlciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmRlZmF1bHQpKHtcbiAgICB0YWdOYW1lOiAnZGl2JyxcbiAgICBjbGFzc05hbWVzOiBbJ2h0bWwtdmlld2VyJ10sXG4gICAgcGFyZW50Tm9kZTogZWRpdG9yLFxufSk7XG5jb25zdCBsaW5lTnVtYmVyID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuZGVmYXVsdCkoe1xuICAgIHRhZ05hbWU6ICdkaXYnLFxuICAgIGNsYXNzTmFtZXM6IFsnbGluZS1udW1iZXJzJ10sXG4gICAgcGFyZW50Tm9kZTogaHRtbFZpZXdlcixcbn0pO1xuY29uc3QgbGluZXNBbW91bnQgPSAxMDtcbmZvciAobGV0IGkgPSAxOyBpIDw9IGxpbmVzQW1vdW50OyBpICs9IDEpIHtcbiAgICBjb25zdCBsaW5lID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuZGVmYXVsdCkoe1xuICAgICAgICB0YWdOYW1lOiAnZGl2JyxcbiAgICAgICAgY2xhc3NOYW1lczogWydsaW5lJ10sXG4gICAgICAgIHRleHRDb250ZW50OiBpLFxuICAgIH0pO1xuICAgIGxpbmVOdW1iZXIuYXBwZW5kKGxpbmUpO1xufVxuY29uc3QgbWFya3VwU2VjdGlvbiA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmRlZmF1bHQpKHtcbiAgICB0YWdOYW1lOiAnZGl2JyxcbiAgICBjbGFzc05hbWVzOiBbJ21hcmt1cCddLFxuICAgIHBhcmVudE5vZGU6IGh0bWxWaWV3ZXIsXG59KTtcbmV4cG9ydHMubWFya3VwU2VjdGlvbiA9IG1hcmt1cFNlY3Rpb247XG4iLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnJlcXVpcmUoXCIuL2xldmVsLXZpZXdlci5jc3NcIik7XG5jb25zdCBjcmVhdGVfZWxlbWVudF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKSk7XG4vLyBpbXBvcnQgbGV2ZWxzIGZyb20gJy4uLy4uL2RhdGEvbGV2ZWxzJztcbmNvbnN0IGxldmVsU2lkZUJhciA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmRlZmF1bHQpKHtcbiAgICB0YWdOYW1lOiAnYXNpZGUnLFxuICAgIGNsYXNzTmFtZXM6IFsnbGV2ZWwtdmlld2VyJ10sXG4gICAgcGFyZW50Tm9kZTogZG9jdW1lbnQuYm9keSxcbn0pO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuY29uc3QgbGV2ZWxWaXdlclRpdGxlID0gKDAsIGNyZWF0ZV9lbGVtZW50XzEuZGVmYXVsdCkoe1xuICAgIHRhZ05hbWU6ICdoMicsXG4gICAgY2xhc3NOYW1lczogWydhc2lkZSddLFxuICAgIHBhcmVudE5vZGU6IGxldmVsU2lkZUJhcixcbiAgICB0ZXh0Q29udGVudDogJ0xldmVsJyxcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gbGV2ZWxTaWRlQmFyO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5yZXF1aXJlKFwiLi90YWJsZS5jc3NcIik7XG5jb25zdCBjcmVhdGVfZWxlbWVudF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9jcmVhdGUtZWxlbWVudFwiKSk7XG5jb25zdCB0YWJsZSA9ICgwLCBjcmVhdGVfZWxlbWVudF8xLmRlZmF1bHQpKHtcbiAgICB0YWdOYW1lOiAnZGl2JyxcbiAgICBjbGFzc05hbWVzOiBbJ3RhYmxlJ10sXG59KTtcbmZ1bmN0aW9uIHNldElEKGVsZW1lbnQsIHN0YXJ0SW5kZXggPSAwKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBbLi4uZWxlbWVudC5jaGlsZE5vZGVzXTtcbiAgICBsZXQgY3VycmVudEluZGV4ID0gc3RhcnRJbmRleDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkID0gY2hpbGRyZW5baV07XG4gICAgICAgIGlmIChjaGlsZC5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHtcbiAgICAgICAgICAgIGNoaWxkLnNldEF0dHJpYnV0ZSgnZWxlbWVudElkJywgY3VycmVudEluZGV4KTtcbiAgICAgICAgICAgIGN1cnJlbnRJbmRleCArPSAxO1xuICAgICAgICAgICAgaWYgKGNoaWxkLmhhc0NoaWxkTm9kZXMoKSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IHNldElEKGNoaWxkLCBjdXJyZW50SW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjdXJyZW50SW5kZXg7XG59XG5zZXRJRCh0YWJsZSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0YWJsZTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gY3JlYXRlRWxlbWVudChvcHRpb25zKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQob3B0aW9ucy50YWdOYW1lKTtcbiAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoLi4ub3B0aW9ucy5jbGFzc05hbWVzKTtcbiAgICBpZiAob3B0aW9ucy50ZXh0Q29udGVudCkge1xuICAgICAgICBlbGVtZW50LnRleHRDb250ZW50ID0gb3B0aW9ucy50ZXh0Q29udGVudDtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMucGFyZW50Tm9kZSkge1xuICAgICAgICBvcHRpb25zLnBhcmVudE5vZGUuYXBwZW5kKGVsZW1lbnQpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5ldmVudEhhbmRsZXIgJiYgb3B0aW9ucy5ldmVudFR5cGUpIHtcbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKG9wdGlvbnMuZXZlbnRUeXBlLCBvcHRpb25zLmV2ZW50SGFuZGxlcik7XG4gICAgfVxuICAgIHJldHVybiBlbGVtZW50O1xufVxuLy8gaW50ZXJmYWNlIEVsZW1lbnRPcHRpb25zIHtcbi8vICAgdGFnOiBzdHJpbmc7XG4vLyAgIGNsYXNzTmFtZXM6IHN0cmluZ1tdO1xuLy8gICB0ZXh0Q29udGVudD86IHN0cmluZztcbi8vICAgcGFyZW50Tm9kZT86IEhUTUxFbGVtZW50O1xuLy8gICBldmVudEhhbmRsZXI/OiAoKSA9PiB2b2lkO1xuLy8gICBldmVudFR5cGU/OiBzdHJpbmc7XG4vLyB9XG4vLyBjbGFzcyBFbGVtZW50Q3JlYXRvciB7XG4vLyAgIGVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuLy8gICBvcHRpb25zOiBFbGVtZW50T3B0aW9ucztcbi8vICAgY29uc3RydWN0b3Iob3B0aW9uczogRWxlbWVudE9wdGlvbnMpIHtcbi8vICAgICB0aGlzLmVsZW1lbnQgPSBudWxsO1xuLy8gICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4vLyAgICAgdGhpcy5jcmVhdGVFbGVtZW50KG9wdGlvbnMpO1xuLy8gICB9XG4vLyAgIHB1YmxpYyBnZXRFbGVtZW50KCkge1xuLy8gICAgIHJldHVybiB0aGlzLmVsZW1lbnQ7XG4vLyAgIH1cbi8vICAgcHVibGljIGFkZElubmVyRWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCkge1xuLy8gICAgIGlmIChlbGVtZW50IGluc3RhbmNlb2YgRWxlbWVudENyZWF0b3IpIHtcbi8vICAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmQoZWxlbWVudC5nZXRFbGVtZW50KCkpO1xuLy8gICAgIH0gZWxzZSB7XG4vLyAgICAgICB0aGlzLmVsZW1lbnQuYXBwZW5kKGVsZW1lbnQpO1xuLy8gICAgIH1cbi8vICAgfVxuLy8gICBwdWJsaWMgY3JlYXRlRWxlbWVudChvcHRpb25zOiBFbGVtZW50T3B0aW9ucykge1xuLy8gICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQob3B0aW9ucy50YWcpO1xuLy8gICAgIHRoaXMuc2V0Q3NzQ2xhc3NlcyhvcHRpb25zLmNsYXNzTmFtZXMpO1xuLy8gICAgIHRoaXMuc2V0VGV4dENvbnRlbnQob3B0aW9ucy50ZXh0Q29udGVudCk7XG4vLyAgICAgdGhpcy5zZXRFdmVudEhhbmRsZXIob3B0aW9ucy5ldmVudFR5cGUsIG9wdGlvbnMuZXZlbnRIYW5kbGVyKTtcbi8vICAgfVxuLy8gICBwdWJsaWMgc2V0Q3NzQ2xhc3Nlcyh0aGlzLm9wdGlvbnMuY2xhc3NOYW1lcykge1xuLy8gICAgIGNzc0NsYXNzZXMuZm9yRWFjaCgoY3NzQ2xhc3MpID0+IHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNzc0NsYXNzKSk7XG4vLyAgIH1cbi8vICAgcHVibGljIHNldFRleHRDb250ZW50KHRleHQgPSAnJykge1xuLy8gICAgIHRoaXMuZWxlbWVudC50ZXh0Q29udGVudCA9IHRleHQ7XG4vLyAgIH1cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtbGVuXG4vLyAgIHB1YmxpYyBzZXRFdmVudEhhbmRsZXIoZXZlbnRUeXBlOiBFbGVtZW50T3B0aW9uc1snZXZlbnRUeXBlJ10sIGV2ZW50SGFuZGxlcjogRWxlbWVudE9wdGlvbnNbJ2V2ZW50SGFuZGxlciddKSB7XG4vLyAgICAgLy8gaWYgKGV2ZW50VHlwZSAmJiBldmVudEhhbmRsZXIpIHtcbi8vICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50VHlwZSwgZXZlbnRIYW5kbGVyKTtcbi8vICAgICAvLyB9XG4vLyAgIH1cbi8vIH1cbi8vIGV4cG9ydCBkZWZhdWx0IEVsZW1lbnRDcmVhdG9yO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlRWxlbWVudDtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgbGV2ZWxzID0gW1xuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBwbGF0ZXMnLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4gICAgPHBsYXRlLz5cXG4gICAgPHBsYXRlLz5cXG4gICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBiZW50byBib3hlcycsXG4gICAgICAgIHNlbGVjdG9yOiAnYmVudG8nLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbiAgICA8YmVudG8vPlxcbiAgICA8cGxhdGUvPlxcbiAgICA8YmVudG8vPlxcbiAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgdGhlIGZhbmN5IHBsYXRlJyxcbiAgICAgICAgc2VsZWN0b3I6ICcjZmFuY3knLFxuICAgICAgICBib2FyZE1hcmt1cDogJzxiZW50bz48L2JlbnRvPlxcbjxwbGF0ZT5cXG4gIDxhcHBsZT48L2FwcGxlPlxcbjwvcGxhdGU+XFxuPGFwcGxlPjwvYXBwbGU+JyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBhcHBsZSBvbiB0aGUgcGxhdGUnLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlIGFwcGxlJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4gICAgPGJlbnRvLz5cXG4gICAgPHBsYXRlPlxcbiAgICAgIDxhcHBsZS8+XFxuICAgIDwvcGxhdGU+XFxuICAgIDxhcHBsZS8+XFxuICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgcGlja2xlIG9uIHRoZSBmYW5jeSBwbGF0ZScsXG4gICAgICAgIHNlbGVjdG9yOiAnI2ZhbmN5IHBpY2tsZScsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPG9yYW5nZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZSBpZD1cImZhbmN5XCI+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPHBpY2tsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8cGlja2xlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBzbWFsbCBhcHBsZXMnLFxuICAgICAgICBzZWxlY3RvcjogJy5zbWFsbCcsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgc21hbGwgb3JhbmdlcycsXG4gICAgICAgIHNlbGVjdG9yOiAnb3JhbmdlLnNtYWxsJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT4nLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgdGhlIHNtYWxsIG9yYW5nZXMgaW4gdGhlIGJlbnRvcycsXG4gICAgICAgIHNlbGVjdG9yOiAnYmVudG8gb3JhbmdlLnNtYWxsJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxvcmFuZ2UvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L2JlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IGFsbCB0aGUgcGxhdGVzIGFuZCBiZW50b3MnLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlLGJlbnRvJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGlja2xlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxwaWNrbGUvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPHBpY2tsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8cGlja2xlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwaWNrbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IGFsbCB0aGUgdGhpbmdzIScsXG4gICAgICAgIHNlbGVjdG9yOiAnKicsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8vPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPG9yYW5nZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZSBpZD1cImZhbmN5XCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgZXZlcnl0aGluZyBvbiBhIHBsYXRlJyxcbiAgICAgICAgc2VsZWN0b3I6ICdwbGF0ZSAqJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlIGlkPVwiZmFuY3lcIj5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8cGlja2xlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8YXBwbGUvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPicsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogXCJTZWxlY3QgZXZlcnkgYXBwbGUgdGhhdCdzIG5leHQgdG8gYSBwbGF0ZVwiLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlICsgYXBwbGUnLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlIC8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBwaWNrbGVzIGJlc2lkZSB0aGUgYmVudG8nLFxuICAgICAgICBzZWxlY3RvcjogJ2JlbnRvIH4gcGlja2xlJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwaWNrbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8cGlja2xlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxwaWNrbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBhcHBsZSBkaXJlY3RseSBvbiBhIHBsYXRlJyxcbiAgICAgICAgc2VsZWN0b3I6ICdwbGF0ZSA+IGFwcGxlJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxiZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgICAgIDxhcHBsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxhcHBsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgdGhlIHRvcCBvcmFuZ2UnLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlIDpmaXJzdC1jaGlsZCcsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50by8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPG9yYW5nZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxvcmFuZ2UgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIC8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwaWNrbGUgY2xhc3M9XCJzbWFsbFwiIC8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgYXBwbGUgYW5kIHRoZSBwaWNrbGUgb24gdGhlIHBsYXRlcycsXG4gICAgICAgIHNlbGVjdG9yOiAncGxhdGUgOm9ubHktY2hpbGQnLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPGFwcGxlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxwaWNrbGUgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxwaWNrbGUgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgdGhlIHNtYWxsIGFwcGxlIGFuZCB0aGUgcGlja2xlJyxcbiAgICAgICAgc2VsZWN0b3I6ICcuc21hbGw6bGFzdC1jaGlsZCcsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZSBpZD1cImZhbmN5XCI+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPG9yYW5nZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPicsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgM3JkIHBsYXRlJyxcbiAgICAgICAgc2VsZWN0b3I6ICc6bnRoLWNoaWxkKDMpJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4gICAgPHBsYXRlLz5cXG4gICAgPHBsYXRlLz5cXG4gICAgPHBsYXRlLz5cXG4gICAgPHBsYXRlIGlkPVwiZmFuY3lcIi8+XFxuICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgMXN0IGJlbnRvJyxcbiAgICAgICAgc2VsZWN0b3I6ICdiZW50bzpudGgtbGFzdC1jaGlsZCgzKScsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50by8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvLz5cXG4nXG4gICAgICAgICAgICArICcgICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IGZpcnN0IGFwcGxlJyxcbiAgICAgICAgc2VsZWN0b3I6ICdhcHBsZTpmaXJzdC1vZi10eXBlJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPG9yYW5nZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YXBwbGUvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPG9yYW5nZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCBhbGwgZXZlbiBwbGF0ZXMnLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlOm50aC1vZi10eXBlKGV2ZW4pJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlIGlkPVwiZmFuY3lcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCBldmVyeSAybmQgcGxhdGUsIHN0YXJ0aW5nIGZyb20gdGhlIDNyZCcsXG4gICAgICAgIHNlbGVjdG9yOiAncGxhdGU6bnRoLW9mLXR5cGUoMm4rMyknLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxhcHBsZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBzZWxlY3RvcjogJ2FwcGxlOm9ubHktb2YtdHlwZScsXG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgYXBwbGUgb24gdGhlIG1pZGRsZSBwbGF0ZScsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwbGF0ZSBpZD1cImZhbmN5XCI+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxhcHBsZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPHBpY2tsZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgdGhlIGxhc3QgYXBwbGUgYW5kIG9yYW5nZScsXG4gICAgICAgIHNlbGVjdG9yOiAnLnNtYWxsOmxhc3Qtb2YtdHlwZScsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPG9yYW5nZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGlja2xlIC8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgdGhlIGVtcHR5IGJlbnRvcycsXG4gICAgICAgIHNlbGVjdG9yOiAnYmVudG86ZW1wdHknLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8vPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L2JlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8vPicsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgYmlnIGFwcGxlcycsXG4gICAgICAgIHNlbGVjdG9yOiAnYXBwbGU6bm90KC5zbWFsbCknLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUgaWQ9XCJmYW5jeVwiPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxhcHBsZSAvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YXBwbGUgLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiIC8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxwaWNrbGUgY2xhc3M9XCJzbWFsbFwiIC8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgaXRlbXMgZm9yIHNvbWVvbmUnLFxuICAgICAgICBzZWxlY3RvcjogJ1tmb3JdJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvPjxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPjwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxhcHBsZSBmb3I9XCJFdGhhblwiLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlIGZvcj1cIkFsaWNlXCI+PHBpY2tsZS8+PC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvIGZvcj1cIkNsYXJhXCI+PG9yYW5nZS8+PC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZS8+JyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBwbGF0ZXMgZm9yIHNvbWVvbmUnLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlW2Zvcl0nLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUgZm9yPVwiU2FyYWhcIj48cGlja2xlLz48L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUgZm9yPVwiTHVrZVwiPjxhcHBsZS8+PC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvIGZvcj1cIlN0ZXZlXCI+PG9yYW5nZS8+PC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgJyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiBcIlNlbGVjdCBWaXRhbHkncyBtZWFsXCIsXG4gICAgICAgIHNlbGVjdG9yOiAnW2Zvcj1WaXRhbHldJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlIGZvcj1cIkFsZXhlaVwiIC8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50byBmb3I9XCJBbGJpbmFcIj48YXBwbGUgLz48L2JlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8gZm9yPVwiVml0YWx5XCI+PG9yYW5nZS8+PC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICcsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogXCJTZWxlY3QgdGhlIGl0ZW1zIGZvciBuYW1lcyB0aGF0IHN0YXJ0IHdpdGggJ1NhJ1wiLFxuICAgICAgICBzZWxlY3RvcjogJ1tmb3JePVwiU2FcIl0nLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUgZm9yPVwiU2FtXCI+PHBpY2tsZS8+PC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvIGZvcj1cIlNhcmFoXCI+PGFwcGxlIGNsYXNzPVwic21hbGxcIi8+PC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvIGZvcj1cIk1hcnlcIj48b3JhbmdlLz48L2JlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6IFwiU2VsZWN0IHRoZSBpdGVtcyBmb3IgbmFtZXMgdGhhdCBlbmQgd2l0aCAnYXRvJ1wiLFxuICAgICAgICBzZWxlY3RvcjogJ1tmb3IkPVwiYXRvXCJdJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgICAgICAgICArICcgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50byBmb3I9XCJIYXlhdG9cIj48cGlja2xlLz48L2JlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8YXBwbGUgZm9yPVwiUnlvdGFcIj48L2FwcGxlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUgZm9yPVwiTWluYXRvXCI+PG9yYW5nZS8+PC9wbGF0ZT5cXG4nXG4gICAgICAgICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6IFwiU2VsZWN0IHRoZSBtZWFscyBmb3IgbmFtZXMgdGhhdCBjb250YWluICdvYmInXCIsXG4gICAgICAgIHNlbGVjdG9yOiAnW2Zvcio9XCJvYmJcIl0nLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8gZm9yPVwiUm9iYmllXCI+PGFwcGxlIC8+PC9iZW50bz5cXG4nXG4gICAgICAgICAgICArICcgICAgPGJlbnRvIGZvcj1cIlRpbW15XCI+PHBpY2tsZSAvPjwvYmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxiZW50byBmb3I9XCJCb2JieVwiPjxvcmFuZ2UgLz48L2JlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICAnLFxuICAgIH0sXG5dO1xuZXhwb3J0cy5kZWZhdWx0ID0gbGV2ZWxzO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby1hbGVydCAqL1xuY29uc3QgYXBwXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY29tcG9uZW50cy9hcHAvYXBwXCIpKTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbmNvbnN0IGFwcCA9IG5ldyBhcHBfMS5kZWZhdWx0KCk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlblxuYWxlcnQoJ9CU0L7RgNC+0LPQvtC5IFJldml3ZXIhIEXRgdC70Lgg0YMg0YLQtdCx0Y8g0LXRgdGC0Ywg0YLQsNC60LDRjyDQstC+0LfQvNC+0LbQvdC+0YHRgtGMLCDQv9C+0LbQsNC70YPQudGB0YLQsCDQvtGC0LvQvtC20Lgg0YHQstC+0Y4g0L/RgNC+0LLQtdGA0LrRgyDQtNC+INCy0LXRh9C10YDQsCA2LjAzLiDQkdGD0LTRgyDQsdC10LfQvNC10YDQvdC+INCx0LvQsNCz0L7QtNCw0YDQtdC9KSkg0JzQvtC5IGRpc2NvcmQ6IEBTYWRKb2VCcmlnaHQjNjkzMzsgdGVsZWdyYW06IEBzYWRqb2VicmlnaHQnKTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgaXMgcmVmZXJlbmNlZCBieSBvdGhlciBtb2R1bGVzIHNvIGl0IGNhbid0IGJlIGlubGluZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2MDcpO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsIm9wdGlvbnMiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInNldEF0dHJpYnV0ZXMiLCJpbnNlcnQiLCJkb21BUEkiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJsb2NhbHMiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX19pbXBvcnREZWZhdWx0IiwibW9kIiwiX19lc01vZHVsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjcmVhdGVfZWxlbWVudF8xIiwidGFibGVfMSIsImxldmVsX3ZpZXdlcl8xIiwiZWRpdG9yXzEiLCJjb250cm9sbGVyXzEiLCJjb25zdHJ1Y3RvciIsImNyZWF0ZVZpZXciLCJjb250cm9sbGVyIiwiZGVmYXVsdCIsIm1haW5Db250YWluZXIiLCJ0YWdOYW1lIiwiY2xhc3NOYW1lcyIsImJvZHkiLCJ0YWJsZVZpZXciLCJsZXZlbFZpZXciLCJlZGl0b3JWaWV3IiwiZWRpdG9yIiwiYXBwZW5kIiwibGV2ZWxzXzEiLCJmaWxsVGFibGUiLCJ0YWJsZSIsImluc2VydE1hcmtVcCIsIm1hcmtVcCIsImN1cnJlbnRMZXZlbCIsImJvYXJkTWFya3VwIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiaW50ZW50IiwicGFyZW50IiwibWFya3VwU2VjdGlvbiIsImNoaWxkcmVuIiwiZm9yRWFjaCIsImNoaWxkIiwibGluZSIsImNsYXNzTGlzdCIsImFkZCIsImVsZW1lbnRJZCIsImdldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwidG9Mb3dlckNhc2UiLCJoYXNDaGlsZE5vZGVzIiwiY3NzRWRpdG9yIiwidGV4dEFyZWEiLCJodG1sVmlld2VyIiwibGluZU51bWJlciIsImxldmVsU2lkZUJhciIsInNldElEIiwic3RhcnRJbmRleCIsImNoaWxkTm9kZXMiLCJjdXJyZW50SW5kZXgiLCJub2RlVHlwZSIsIk5vZGUiLCJFTEVNRU5UX05PREUiLCJldmVudEhhbmRsZXIiLCJldmVudFR5cGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZG9UaGlzIiwic2VsZWN0b3IiLCJhbGVydCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJlbnVtZXJhYmxlIiwiZ2V0IiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwibmMiXSwic291cmNlUm9vdCI6IiJ9