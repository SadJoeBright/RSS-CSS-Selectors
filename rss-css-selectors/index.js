(()=>{"use strict";var n={767:(n,e,t)=>{t.d(e,{Z:()=>i});var A=t(537),a=t.n(A),r=t(645),o=t.n(r)()(a());o.push([n.id,"body {\n  background: rgb(42, 34, 28);\n  font-family: Arial, Helvetica, sans-serif;\n  color: #a2a2a2;\n}\n\n\n.main-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 85%;\n  min-height: 100%;\n} \n\nh1 {\n  font-size: calc(2vw + 50%);\n  margin: 0 auto;\n}\n\nh2 {\n  font-size: calc(1.5vw + 50%);\n}\n\n.aside {\n  padding: 10px 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: start;\n  width: 15%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 85%;\n  background: rgb(26, 25, 25);\n}\n.table {  \n  width: min-content;\n  position: relative;\n  padding: 1vw 2vw;\n  margin: 2vw 0 5vw 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgb(184, 114, 9);\n  gap: 3vw;\n  transform: perspective(350px) rotateX(15deg);\n  border-radius: 0.3vw;\n  box-shadow: 0px calc(20px + 0.8vw) calc(5px + 0.8vw) rgba(5, 5, 5, 0.6);\n}\n\n.table::after {\n  content: '';  \n  width: calc(100% - 20px + 0.1vw);\n  border-top: calc(2px + 0.5vw) solid rgb(124, 76, 4);\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  position: absolute;\n  top: calc(100% - 0.2vw);\n  left: 0;\n}\n\n\n\n /* .table *:hover */\n .hovered {\n  box-shadow: 0 0 10px 10px rgba(255, 205, 42, 0.645);\n}\n\n.markUp-hovered {\n  filter: brightness(150%);\n}\n\n\n\nbento {\n  display: flex;\n  position: relative;\n  z-index: -1;\n  justify-content: center;\n  align-items: center;\n  width: 9vw;\n  height: 5vw;\n  background-color: rgb(123, 12, 12);\n  border-top: double 2vw rgb(65, 9, 9);\n  border-bottom: double 2vw rgb(65, 9, 9);\n  transition: all ease-in-out .5s;\n}\n\n\n\npickle {\n  display: block;\n  position: relative;\n  width: 15%;\n  height: 30%;\n  border-radius: 40px;\n  background: green;\n  border: solid 2px rgb(4, 95, 4);\n  border-bottom: solid 8px rgb(4, 95, 4);\n}\n\napple, orange {\n  display: block;\n  position: relative;\n  width: 3vw;\n  height: 3vw;\n  border-radius: 40px;\n  background: red;\n  border: solid 2px rgb(165, 4, 4);\n  border-width: 1px 3px 6px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  box-shadow: 0px calc(2px + 0.2vw) 5px rgba(0,0,0,.5);\n  transition: all .5s ease-out; \n}\n\norange {  \n  background: orange;\n  border: solid 2px rgb(154, 100, 0);  \n}\n\napple::after,\npickle::after,\norange::after {\n content: \"\";\n width: 25%;\n height: 25%;\n border-radius: 50%;\n position: absolute;\n top: 10%;\n left: 50%;\n background: rgba(255, 255, 255, 0.496);\n transition: all .5s ease-out; \n}\n\n\nplate {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  z-index: -10;\n  width: 7vw;\n  height: 7vw;\n  border-radius: 50%;\n  background: white;\n  border: solid calc(1px + 0.1vw) rgb(209, 209, 209);\n  border-bottom: solid calc(4px + 0.1vw) rgb(209, 209, 209);\n  box-shadow: 0px calc(5px + 0.2vw) 5px rgba(0,0,0,.2);\n  transition: all .2s ease-out; \n}\n\n@keyframes puls {\n  0% {\n    transform: scale(100%);\n    filter: brightness(1);\n  }\n  50% {\n    transform: scale(110%);\n    filter: brightness(1.1);\n  }\n  100% {\n    transform: scale(100%);\n    filter: brightness(1);\n  }\n}\n\n@keyframes shake {\n  0% {\n    left: 2px;\n\n  }\n  20% {\n    left: 0;\n  }\n  40% {\n    left: -2px;\n  }\n  60% {\n    left: 0;\n  }\n  80% {\n    left: 2px;\n  }\n  100% {\n    left: 0;\n  }\n\n}\n\n\n@keyframes appearence {\n  from{\n    transform: scale(0);\n  }\n  to {\n    transform: scale(100%);\n  }\n}\n.appearence {\n  animation: appearence .3s ease-in-out;\n}\n\n.table *{\n  animation: appearence .3s ease-in-out;\n}\n.table > .puls {\n  animation: puls 1s ease-in-out infinite, appearence .3s ease-in-out;\n}\n\n.shake{\n  animation: shake .2s 3 ease-in-out;\n}\n\n.puls {\n  animation: puls 1s ease-in-out infinite;\n}\n\n@keyframes slideOut {\n  from {\n    transform: translateY(0);\n  }\n  to {\n    transform: translateY(-100vh);\n  }\n}\n\n.out { \n  animation: slideOut .5s ease-in-out forwards;\n}\n\n.editor {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(30vw + 20%);\n  padding: 10px;\n  border-radius: 5px;\n  background: rgb(21, 21, 21);\n}\n\n\n.html-viewer {\n  background: #2a2a2a;\n  width: 100%;\n  display: flex;\n}\n\n.line-numbers {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 5%;\n  padding: 5px 10px 5px 0;\n  text-align: right;\n  border-right: solid 2px black;\n  font-size: 16px;\n}\n\n.markup {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding-left: 15px;\n  /* font-family: ; */\n  /* align-items: flex-start; */\n}\n\n.markup::before{\n  content: '<table>';\n  margin-left: -10px;\n  padding-top: 10px;\n}\n\n.markup::after{\n  content: '</table>';\n  margin-left: -10px;\n  padding-top: 5px;\n}\n\n.line:hover {\n  filter: brightness(150%);\n  cursor: default;\n}\n\n.line {\n  white-space: pre-wrap;\n  padding-top: 5px;\n  padding-left: -40px;\n}\n\n.level-list {\n  width: 100%;\n}\n\n.level-item {\n  text-align: center;\n  width: 100%;\n  margin: 5px;\n  font-size: 20px;\n}\n\n.level-item_selected{\n  background:rgba(32, 32, 32, 0.966);\n}\n\n.level-item:hover {\n  background:rgba(45, 45, 45, 0.966);\n}\n\n.completed {\n  color: green;\n}\n\n.completed-with-help {\n  color: yellow;\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 85%;\n  padding: 15px 2vw;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n}\n\nfooter .copyright {\n  font-size: 14px;\n  color: #5b5b5b;\n  text-align: center;\n}\nfooter .copyright a {\n  color: #6e6c6c;\n  transition: all ease-in-out 0.2s;\n}\nfooter .copyright a:hover {\n  color: #a2a2a2;\n}\nfooter .copyright:before {\n  content: 'Â©';\n}\n\n.link-container {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: #6e6c6c;\n}\n\n.rss-link {\n  width: 110px;\n  height: 45px;\n  /* background-image: url(../src/assets/icons/rss.svg); */\n  background-size: contain;\n  background-repeat: no-repeat;\n  transition: all ease-in-out 0.2s;\n}\n\n.github-link {\n  display: inline-block;\n  width: 35px;\n  height: 35px;\n  /* background-image: url(../src/assets/icons/logo-github.svg); */\n  background-size: cover;\n  background-repeat: no-repeat;\n  transition: all ease-in-out 0.2s;\n}\n\n\n.rss-link:hover,\n.github-link:hover {\n  transform: scale(1.05);\n  filter: brightness(120%);\n}\n\n.notification {\n  background: rgb(227, 194, 131);\n  position: absolute;\n  z-index: 10;\n  min-width: max-content;\n  padding: 5px 10px;\n  bottom: calc(6vw + 40%);\n  left: 50%;\n  border-radius: 0.2vw;\n  transform: perspective(in);\n  color: black;\n  font-size: calc(1vw + 20%);\n} ","",{version:3,sources:["webpack://./src/global.css"],names:[],mappings:"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",sourcesContent:["body {\n  background: rgb(42, 34, 28);\n  font-family: Arial, Helvetica, sans-serif;\n  color: #a2a2a2;\n}\n\n\n.main-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 85%;\n  min-height: 100%;\n} \n\nh1 {\n  font-size: calc(2vw + 50%);\n  margin: 0 auto;\n}\n\nh2 {\n  font-size: calc(1.5vw + 50%);\n}\n\n.aside {\n  padding: 10px 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: start;\n  width: 15%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 85%;\n  background: rgb(26, 25, 25);\n}\n.table {  \n  width: min-content;\n  position: relative;\n  padding: 1vw 2vw;\n  margin: 2vw 0 5vw 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgb(184, 114, 9);\n  gap: 3vw;\n  transform: perspective(350px) rotateX(15deg);\n  border-radius: 0.3vw;\n  box-shadow: 0px calc(20px + 0.8vw) calc(5px + 0.8vw) rgba(5, 5, 5, 0.6);\n}\n\n.table::after {\n  content: '';  \n  width: calc(100% - 20px + 0.1vw);\n  border-top: calc(2px + 0.5vw) solid rgb(124, 76, 4);\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  position: absolute;\n  top: calc(100% - 0.2vw);\n  left: 0;\n}\n\n\n\n /* .table *:hover */\n .hovered {\n  box-shadow: 0 0 10px 10px rgba(255, 205, 42, 0.645);\n}\n\n.markUp-hovered {\n  filter: brightness(150%);\n}\n\n\n\nbento {\n  display: flex;\n  position: relative;\n  z-index: -1;\n  justify-content: center;\n  align-items: center;\n  width: 9vw;\n  height: 5vw;\n  background-color: rgb(123, 12, 12);\n  border-top: double 2vw rgb(65, 9, 9);\n  border-bottom: double 2vw rgb(65, 9, 9);\n  transition: all ease-in-out .5s;\n}\n\n\n\npickle {\n  display: block;\n  position: relative;\n  width: 15%;\n  height: 30%;\n  border-radius: 40px;\n  background: green;\n  border: solid 2px rgb(4, 95, 4);\n  border-bottom: solid 8px rgb(4, 95, 4);\n}\n\napple, orange {\n  display: block;\n  position: relative;\n  width: 3vw;\n  height: 3vw;\n  border-radius: 40px;\n  background: red;\n  border: solid 2px rgb(165, 4, 4);\n  border-width: 1px 3px 6px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  box-shadow: 0px calc(2px + 0.2vw) 5px rgba(0,0,0,.5);\n  transition: all .5s ease-out; \n}\n\norange {  \n  background: orange;\n  border: solid 2px rgb(154, 100, 0);  \n}\n\napple::after,\npickle::after,\norange::after {\n content: \"\";\n width: 25%;\n height: 25%;\n border-radius: 50%;\n position: absolute;\n top: 10%;\n left: 50%;\n background: rgba(255, 255, 255, 0.496);\n transition: all .5s ease-out; \n}\n\n\nplate {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  z-index: -10;\n  width: 7vw;\n  height: 7vw;\n  border-radius: 50%;\n  background: white;\n  border: solid calc(1px + 0.1vw) rgb(209, 209, 209);\n  border-bottom: solid calc(4px + 0.1vw) rgb(209, 209, 209);\n  box-shadow: 0px calc(5px + 0.2vw) 5px rgba(0,0,0,.2);\n  transition: all .2s ease-out; \n}\n\n@keyframes puls {\n  0% {\n    transform: scale(100%);\n    filter: brightness(1);\n  }\n  50% {\n    transform: scale(110%);\n    filter: brightness(1.1);\n  }\n  100% {\n    transform: scale(100%);\n    filter: brightness(1);\n  }\n}\n\n@keyframes shake {\n  0% {\n    left: 2px;\n\n  }\n  20% {\n    left: 0;\n  }\n  40% {\n    left: -2px;\n  }\n  60% {\n    left: 0;\n  }\n  80% {\n    left: 2px;\n  }\n  100% {\n    left: 0;\n  }\n\n}\n\n\n@keyframes appearence {\n  from{\n    transform: scale(0);\n  }\n  to {\n    transform: scale(100%);\n  }\n}\n.appearence {\n  animation: appearence .3s ease-in-out;\n}\n\n.table *{\n  animation: appearence .3s ease-in-out;\n}\n.table > .puls {\n  animation: puls 1s ease-in-out infinite, appearence .3s ease-in-out;\n}\n\n.shake{\n  animation: shake .2s 3 ease-in-out;\n}\n\n.puls {\n  animation: puls 1s ease-in-out infinite;\n}\n\n@keyframes slideOut {\n  from {\n    transform: translateY(0);\n  }\n  to {\n    transform: translateY(-100vh);\n  }\n}\n\n.out { \n  animation: slideOut .5s ease-in-out forwards;\n}\n\n.editor {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: calc(30vw + 20%);\n  padding: 10px;\n  border-radius: 5px;\n  background: rgb(21, 21, 21);\n}\n\n\n.html-viewer {\n  background: #2a2a2a;\n  width: 100%;\n  display: flex;\n}\n\n.line-numbers {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: 5%;\n  padding: 5px 10px 5px 0;\n  text-align: right;\n  border-right: solid 2px black;\n  font-size: 16px;\n}\n\n.markup {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding-left: 15px;\n  /* font-family: ; */\n  /* align-items: flex-start; */\n}\n\n.markup::before{\n  content: '<table>';\n  margin-left: -10px;\n  padding-top: 10px;\n}\n\n.markup::after{\n  content: '</table>';\n  margin-left: -10px;\n  padding-top: 5px;\n}\n\n.line:hover {\n  filter: brightness(150%);\n  cursor: default;\n}\n\n.line {\n  white-space: pre-wrap;\n  padding-top: 5px;\n  padding-left: -40px;\n}\n\n.level-list {\n  width: 100%;\n}\n\n.level-item {\n  text-align: center;\n  width: 100%;\n  margin: 5px;\n  font-size: 20px;\n}\n\n.level-item_selected{\n  background:rgba(32, 32, 32, 0.966);\n}\n\n.level-item:hover {\n  background:rgba(45, 45, 45, 0.966);\n}\n\n.completed {\n  color: green;\n}\n\n.completed-with-help {\n  color: yellow;\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 85%;\n  padding: 15px 2vw;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n}\n\nfooter .copyright {\n  font-size: 14px;\n  color: #5b5b5b;\n  text-align: center;\n}\nfooter .copyright a {\n  color: #6e6c6c;\n  transition: all ease-in-out 0.2s;\n}\nfooter .copyright a:hover {\n  color: #a2a2a2;\n}\nfooter .copyright:before {\n  content: 'Â©';\n}\n\n.link-container {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: #6e6c6c;\n}\n\n.rss-link {\n  width: 110px;\n  height: 45px;\n  /* background-image: url(../src/assets/icons/rss.svg); */\n  background-size: contain;\n  background-repeat: no-repeat;\n  transition: all ease-in-out 0.2s;\n}\n\n.github-link {\n  display: inline-block;\n  width: 35px;\n  height: 35px;\n  /* background-image: url(../src/assets/icons/logo-github.svg); */\n  background-size: cover;\n  background-repeat: no-repeat;\n  transition: all ease-in-out 0.2s;\n}\n\n\n.rss-link:hover,\n.github-link:hover {\n  transform: scale(1.05);\n  filter: brightness(120%);\n}\n\n.notification {\n  background: rgb(227, 194, 131);\n  position: absolute;\n  z-index: 10;\n  min-width: max-content;\n  padding: 5px 10px;\n  bottom: calc(6vw + 40%);\n  left: 50%;\n  border-radius: 0.2vw;\n  transform: perspective(in);\n  color: black;\n  font-size: calc(1vw + 20%);\n} "],sourceRoot:""}]);const i=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",A=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),A&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),A&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,A,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(A)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(o[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);A&&o[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},427:(n,e,t)=>{t.r(e),t.d(e,{default:()=>f});var A=t(379),a=t.n(A),r=t(795),o=t.n(r),i=t(569),s=t.n(i),l=t(565),c=t.n(l),d=t(216),p=t.n(d),C=t(589),u=t.n(C),E=t(767),B={};B.styleTagTransform=u(),B.setAttributes=c(),B.insert=s().bind(null,"head"),B.domAPI=o(),B.insertStyleElement=p(),a()(E.Z,B);const f=E.Z&&E.Z.locals?E.Z.locals:void 0},379:n=>{var e=[];function t(n){for(var t=-1,A=0;A<e.length;A++)if(e[A].identifier===n){t=A;break}return t}function A(n,A){for(var r={},o=[],i=0;i<n.length;i++){var s=n[i],l=A.base?s[0]+A.base:s[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var p=t(d),C={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var u=a(C,A);A.byIndex=i,e.splice(i,0,{identifier:d,updater:u,references:1})}o.push(d)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=A(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var i=t(r[o]);e[i].references--}for(var s=A(n,a),l=0;l<r.length;l++){var c=t(r[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var A=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var A="";t.supports&&(A+="@supports (".concat(t.supports,") {")),t.media&&(A+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(A+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),A+=t.css,a&&(A+="}"),t.media&&(A+="}"),t.supports&&(A+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(A,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},262:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=[{doThis:"Select the plates",selector:"plate",boardMarkup:"<plate></plate>\n<plate></plate>"},{doThis:"Select the bento boxes",selector:"bento",boardMarkup:"<bento></bento>\n<plate></plate>\n<bento></bento>"},{doThis:"Select the fancy plate",selector:"plate apple",boardMarkup:'<bento class="some-class"></bento>\n<plate>\n<apple class="casual"></apple>\n</plate>\n<apple></apple>'},{doThis:"Select the apple on the plate",selector:"plate apple",boardMarkup:'<bento class="some-class"><orange></orange></bento>\n<plate>\n<apple class="casual"></apple>\n</plate>\n<apple></apple> '},{doThis:"Select the pickle on the fancy plate",selector:"#fancy pickle",boardMarkup:'\n    <bento>\n    <orange/>\n    </bento>\n    <plate id="fancy">\n      <pickle/>\n    </plate>\n    <plate>\n      <pickle/>\n    </plate>\n    '}]},607:function(n,e,t){var A=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0}),t(427);const a=A(t(262));alert("ÐÐ¾ÑÐ¾Ð³Ð¾Ð¹ Reviwer! EÑÐ»Ð¸ Ñ ÑÐµÐ±Ñ ÐµÑÑÑ ÑÐ°ÐºÐ°Ñ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ð¾ÑÑÑ, Ð¿Ð¾Ð¶Ð°Ð»ÑÐ¹ÑÑÐ° Ð¾ÑÐ»Ð¾Ð¶Ð¸ ÑÐ²Ð¾Ñ Ð¿ÑÐ¾Ð²ÐµÑÐºÑ Ð´Ð¾ Ð²ÐµÑÐµÑÐ° 6.03. ÐÑÐ´Ñ Ð±ÐµÐ·Ð¼ÐµÑÐ½Ð¾ Ð±Ð»Ð°Ð³Ð¾Ð´Ð°ÑÐµÐ½)) ÐÐ¾Ð¹ discord: @SadJoeBright#6933; telegram: @sadjoebright");const r=document.querySelector(".table"),o=document.querySelector(".markup"),i=document.querySelector(".level-list"),s=document.querySelector(".css-editor__input"),l=document.querySelector(".css-editor__btn"),c=document.createElement("button");c.textContent="help",document.body.append(c);let d=!1,p=parseInt(localStorage.getItem("currentLevel"),10)||1;function C(n){r.innerHTML=a.default[n-1].boardMarkup;const e=r.querySelectorAll(a.default[n-1].selector);i.querySelector(".level-item_selected")&&i.querySelector(".level-item_selected").classList.remove("level-item_selected"),i.children[n-1].classList.add("level-item_selected"),e.forEach((n=>{n.classList.add("puls")}))}function u(n,e=0){const t=[...n.childNodes];let A=e;for(let n=0;n<t.length;n+=1){const e=t[n];e.nodeType===Node.ELEMENT_NODE&&(e.setAttribute("elementId",A),A+=1,e.hasChildNodes()&&(A=u(e,A)))}return A}function E(n,e="",t=o){[...n.children].forEach((n=>{const A=document.createElement("div");A.classList.add("line");const a=n.getAttribute("elementId");A.setAttribute("elementId",a),A.setAttribute("tagtId",a);const r=`${e}<${n.tagName.toLowerCase()}>`,o=`</${n.tagName.toLowerCase()}>`,i=document.createElement("style");i.innerHTML=`[tagtId="${a}"]::before{content:"${r}"}`;const s=document.createElement("style");s.innerHTML=`[tagtId="${a}"]::after{content:"${o}"}`,document.head.append(i,s),t.append(A),n.hasChildNodes()&&E(n,"   ",A)}))}function B(n){d=!1,o.innerHTML="",s.value="",C(n),u(r),E(r)}function f(){const n=r.querySelectorAll(a.default[p-1].selector);JSON.stringify(r.querySelectorAll(s.value.trim()))===JSON.stringify(n)?(n.forEach((n=>{n.classList.add("out"),n.classList.remove("puls")})),i.children[p-1].classList.add("completed"),d&&i.children[p-1].classList.add("completed-with-help"),setTimeout((()=>{p+=1,B(p)}))):(r.classList.add("shake"),setTimeout((()=>{r.classList.remove("shake")}),200))}function g(n){const e=n.target;if(e!==r&&n.target!==o){const t=e.getAttribute("elementId"),A=r.querySelector(`[elementId="${t}"]`),a=o.querySelector(`[elementId="${t}"]`),i=document.createElement("div");i.textContent=`<${A.tagName.toLowerCase()}></${A.tagName.toLowerCase()}>`,i.classList.add("notification"),A.classList.add("hovered"),A.append(i),a.classList.add("markUp-hovered"),n.target.addEventListener("mouseout",(()=>{A.classList.remove("hovered"),a.classList.remove("markUp-hovered"),i.remove()}))}}C(p),u(r),E(r),r.addEventListener("mouseover",g),o.addEventListener("mouseover",g),i.addEventListener("click",(function(n){const e=n.target;e.parentNode===i&&(i.querySelector(".level-item_selected")&&i.querySelector(".level-item_selected").classList.remove("level-item_selected"),e.classList.add("level-item_selected"),p=+e.textContent,B(p))})),l.addEventListener("click",f),c.addEventListener("click",(function(){!function(n){let e=0;const t=setInterval((()=>{s.value+=n[e],e+=1,e===n.length&&clearInterval(t)}),100)}(a.default[p-1].selector),d=!0})),s.addEventListener("keydown",(n=>{"Enter"===n.key&&f()})),window.addEventListener("beforeunload",(function(){localStorage.setItem("currentLevel",p)}))}},e={};function t(A){var a=e[A];if(void 0!==a)return a.exports;var r=e[A]={id:A,exports:{}};return n[A].call(r.exports,r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var A in e)t.o(e,A)&&!t.o(n,A)&&Object.defineProperty(n,A,{enumerable:!0,get:e[A]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.nc=void 0,t(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJtYXBwaW5ncyI6IndGQUdJQSxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLDB2TkEyWXBDLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLDhCQUE4QixNQUFRLEdBQUcsU0FBVyw0cUdBQTRxRyxlQUFpQixDQUFDLDJ2TkFBMnZOLFdBQWEsTUFFMWhVLFMsVUM1WUFELEVBQU9FLFFBQVUsU0FBVUMsR0FDekIsSUFBSUMsRUFBTyxHQTRFWCxPQXpFQUEsRUFBS0MsU0FBVyxXQUNkLE9BQU9DLEtBQUtDLEtBQUksU0FBVUMsR0FDeEIsSUFBSUMsRUFBVSxHQUNWQyxPQUErQixJQUFaRixFQUFLLEdBb0I1QixPQW5CSUEsRUFBSyxLQUNQQyxHQUFXLGNBQWNFLE9BQU9ILEVBQUssR0FBSSxRQUV2Q0EsRUFBSyxLQUNQQyxHQUFXLFVBQVVFLE9BQU9ILEVBQUssR0FBSSxPQUVuQ0UsSUFDRkQsR0FBVyxTQUFTRSxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxPQUU1RUMsR0FBV04sRUFBdUJLLEdBQzlCRSxJQUNGRCxHQUFXLEtBRVRELEVBQUssS0FDUEMsR0FBVyxLQUVURCxFQUFLLEtBQ1BDLEdBQVcsS0FFTkEsQ0FDVCxJQUFHSSxLQUFLLEdBQ1YsRUFHQVQsRUFBS1UsRUFBSSxTQUFXQyxFQUFTQyxFQUFPQyxFQUFRQyxFQUFVQyxHQUM3QixpQkFBWkosSUFDVEEsRUFBVSxDQUFDLENBQUMsS0FBTUEsT0FBU0ssS0FFN0IsSUFBSUMsRUFBeUIsQ0FBQyxFQUM5QixHQUFJSixFQUNGLElBQUssSUFBSUssRUFBSSxFQUFHQSxFQUFJaEIsS0FBS00sT0FBUVUsSUFBSyxDQUNwQyxJQUFJckIsRUFBS0ssS0FBS2dCLEdBQUcsR0FDUCxNQUFOckIsSUFDRm9CLEVBQXVCcEIsSUFBTSxFQUVqQyxDQUVGLElBQUssSUFBSXNCLEVBQUssRUFBR0EsRUFBS1IsRUFBUUgsT0FBUVcsSUFBTSxDQUMxQyxJQUFJZixFQUFPLEdBQUdHLE9BQU9JLEVBQVFRLElBQ3pCTixHQUFVSSxFQUF1QmIsRUFBSyxXQUdyQixJQUFWVyxTQUNjLElBQVpYLEVBQUssS0FHZEEsRUFBSyxHQUFLLFNBQVNHLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxNQUYvRkEsRUFBSyxHQUFLVyxHQU1WSCxJQUNHUixFQUFLLElBR1JBLEVBQUssR0FBSyxVQUFVRyxPQUFPSCxFQUFLLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLEtBQzFEQSxFQUFLLEdBQUtRLEdBSFZSLEVBQUssR0FBS1EsR0FNVkUsSUFDR1YsRUFBSyxJQUdSQSxFQUFLLEdBQUssY0FBY0csT0FBT0gsRUFBSyxHQUFJLE9BQU9HLE9BQU9ILEVBQUssR0FBSSxLQUMvREEsRUFBSyxHQUFLVSxHQUhWVixFQUFLLEdBQUssR0FBR0csT0FBT08sSUFNeEJkLEVBQUtMLEtBQUtTLEdBQ1osQ0FDRixFQUNPSixDQUNULEMsVUNsRkFKLEVBQU9FLFFBQVUsU0FBVU0sR0FDekIsSUFBSUMsRUFBVUQsRUFBSyxHQUNmZ0IsRUFBYWhCLEVBQUssR0FDdEIsSUFBS2dCLEVBQ0gsT0FBT2YsRUFFVCxHQUFvQixtQkFBVGdCLEtBQXFCLENBQzlCLElBQUlDLEVBQVNELEtBQUtFLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVU4sTUFDekRPLEVBQU8sK0RBQStEcEIsT0FBT2UsR0FDN0VNLEVBQWdCLE9BQU9yQixPQUFPb0IsRUFBTSxPQUN4QyxNQUFPLENBQUN0QixHQUFTRSxPQUFPLENBQUNxQixJQUFnQm5CLEtBQUssS0FDaEQsQ0FDQSxNQUFPLENBQUNKLEdBQVNJLEtBQUssS0FDeEIsQyx1S0NKSW9CLEVBQVUsQ0FBQyxFQUVmQSxFQUFRQyxrQkFBb0IsSUFDNUJELEVBQVFFLGNBQWdCLElBRWxCRixFQUFRRyxPQUFTLFNBQWMsS0FBTSxRQUUzQ0gsRUFBUUksT0FBUyxJQUNqQkosRUFBUUssbUJBQXFCLElBRWhCLElBQUksSUFBU0wsR0FLbkIsUUFBZSxLQUFXLElBQVFNLE9BQVMsSUFBUUEsWUFBU25CLEMsVUN4Qm5FLElBQUlvQixFQUFjLEdBQ2xCLFNBQVNDLEVBQXFCQyxHQUU1QixJQURBLElBQUlDLEdBQVUsRUFDTDdCLEVBQUksRUFBR0EsRUFBSTBCLEVBQVk1QixPQUFRRSxJQUN0QyxHQUFJMEIsRUFBWTFCLEdBQUc0QixhQUFlQSxFQUFZLENBQzVDQyxFQUFTN0IsRUFDVCxLQUNGLENBRUYsT0FBTzZCLENBQ1QsQ0FDQSxTQUFTQyxFQUFheEMsRUFBTTZCLEdBRzFCLElBRkEsSUFBSVksRUFBYSxDQUFDLEVBQ2RDLEVBQWMsR0FDVGhDLEVBQUksRUFBR0EsRUFBSVYsRUFBS1EsT0FBUUUsSUFBSyxDQUNwQyxJQUFJTixFQUFPSixFQUFLVSxHQUNaYixFQUFLZ0MsRUFBUWMsS0FBT3ZDLEVBQUssR0FBS3lCLEVBQVFjLEtBQU92QyxFQUFLLEdBQ2xEd0MsRUFBUUgsRUFBVzVDLElBQU8sRUFDMUJ5QyxFQUFhLEdBQUcvQixPQUFPVixFQUFJLEtBQUtVLE9BQU9xQyxHQUMzQ0gsRUFBVzVDLEdBQU0rQyxFQUFRLEVBQ3pCLElBQUlDLEVBQW9CUixFQUFxQkMsR0FDekNRLEVBQU0sQ0FDUkMsSUFBSzNDLEVBQUssR0FDVlEsTUFBT1IsRUFBSyxHQUNaNEMsVUFBVzVDLEVBQUssR0FDaEJVLFNBQVVWLEVBQUssR0FDZlcsTUFBT1gsRUFBSyxJQUVkLElBQTJCLElBQXZCeUMsRUFDRlQsRUFBWVMsR0FBbUJJLGFBQy9CYixFQUFZUyxHQUFtQkssUUFBUUosT0FDbEMsQ0FDTCxJQUFJSSxFQUFVQyxFQUFnQkwsRUFBS2pCLEdBQ25DQSxFQUFRdUIsUUFBVTFDLEVBQ2xCMEIsRUFBWWlCLE9BQU8zQyxFQUFHLEVBQUcsQ0FDdkI0QixXQUFZQSxFQUNaWSxRQUFTQSxFQUNURCxXQUFZLEdBRWhCLENBQ0FQLEVBQVkvQyxLQUFLMkMsRUFDbkIsQ0FDQSxPQUFPSSxDQUNULENBQ0EsU0FBU1MsRUFBZ0JMLEVBQUtqQixHQUM1QixJQUFJeUIsRUFBTXpCLEVBQVFJLE9BQU9KLEdBWXpCLE9BWEF5QixFQUFJQyxPQUFPVCxHQUNHLFNBQWlCVSxHQUM3QixHQUFJQSxFQUFRLENBQ1YsR0FBSUEsRUFBT1QsTUFBUUQsRUFBSUMsS0FBT1MsRUFBTzVDLFFBQVVrQyxFQUFJbEMsT0FBUzRDLEVBQU9SLFlBQWNGLEVBQUlFLFdBQWFRLEVBQU8xQyxXQUFhZ0MsRUFBSWhDLFVBQVkwQyxFQUFPekMsUUFBVStCLEVBQUkvQixNQUN6SixPQUVGdUMsRUFBSUMsT0FBT1QsRUFBTVUsRUFDbkIsTUFDRUYsRUFBSUcsUUFFUixDQUVGLENBQ0E3RCxFQUFPRSxRQUFVLFNBQVVFLEVBQU02QixHQUcvQixJQUFJNkIsRUFBa0JsQixFQUR0QnhDLEVBQU9BLEdBQVEsR0FEZjZCLEVBQVVBLEdBQVcsQ0FBQyxHQUd0QixPQUFPLFNBQWdCOEIsR0FDckJBLEVBQVVBLEdBQVcsR0FDckIsSUFBSyxJQUFJakQsRUFBSSxFQUFHQSxFQUFJZ0QsRUFBZ0JsRCxPQUFRRSxJQUFLLENBQy9DLElBQ0lrRCxFQUFRdkIsRUFES3FCLEVBQWdCaEQsSUFFakMwQixFQUFZd0IsR0FBT1gsWUFDckIsQ0FFQSxJQURBLElBQUlZLEVBQXFCckIsRUFBYW1CLEVBQVM5QixHQUN0Q2lDLEVBQUssRUFBR0EsRUFBS0osRUFBZ0JsRCxPQUFRc0QsSUFBTSxDQUNsRCxJQUNJQyxFQUFTMUIsRUFES3FCLEVBQWdCSSxJQUVLLElBQW5DMUIsRUFBWTJCLEdBQVFkLGFBQ3RCYixFQUFZMkIsR0FBUWIsVUFDcEJkLEVBQVlpQixPQUFPVSxFQUFRLEdBRS9CLENBQ0FMLEVBQWtCRyxDQUNwQixDQUNGLEMsVUNqRkEsSUFBSUcsRUFBTyxDQUFDLEVBK0JacEUsRUFBT0UsUUFQUCxTQUEwQmtDLEVBQVFpQyxHQUNoQyxJQUFJQyxFQXRCTixTQUFtQkEsR0FDakIsUUFBNEIsSUFBakJGLEVBQUtFLEdBQXlCLENBQ3ZDLElBQUlDLEVBQWNDLFNBQVNDLGNBQWNILEdBR3pDLEdBQUlJLE9BQU9DLG1CQUFxQkosYUFBdUJHLE9BQU9DLGtCQUM1RCxJQUdFSixFQUFjQSxFQUFZSyxnQkFBZ0JDLElBQzVDLENBQUUsTUFBT0MsR0FFUFAsRUFBYyxJQUNoQixDQUVGSCxFQUFLRSxHQUFVQyxDQUNqQixDQUNBLE9BQU9ILEVBQUtFLEVBQ2QsQ0FJZVMsQ0FBVTNDLEdBQ3ZCLElBQUtrQyxFQUNILE1BQU0sSUFBSVUsTUFBTSwyR0FFbEJWLEVBQU9XLFlBQVlaLEVBQ3JCLEMsVUN2QkFyRSxFQUFPRSxRQU5QLFNBQTRCK0IsR0FDMUIsSUFBSWlELEVBQVVWLFNBQVNXLGNBQWMsU0FHckMsT0FGQWxELEVBQVFFLGNBQWMrQyxFQUFTakQsRUFBUW1ELFlBQ3ZDbkQsRUFBUUcsT0FBTzhDLEVBQVNqRCxFQUFRQSxTQUN6QmlELENBQ1QsQyxnQkNDQWxGLEVBQU9FLFFBTlAsU0FBd0NtRixHQUN0QyxJQUFJQyxFQUFtRCxLQUNuREEsR0FDRkQsRUFBYUUsYUFBYSxRQUFTRCxFQUV2QyxDLFVDb0RBdEYsRUFBT0UsUUFqQlAsU0FBZ0IrQixHQUNkLEdBQXdCLG9CQUFidUMsU0FDVCxNQUFPLENBQ0xiLE9BQVEsV0FBbUIsRUFDM0JFLE9BQVEsV0FBbUIsR0FHL0IsSUFBSXdCLEVBQWVwRCxFQUFRSyxtQkFBbUJMLEdBQzlDLE1BQU8sQ0FDTDBCLE9BQVEsU0FBZ0JULElBakQ1QixTQUFlbUMsRUFBY3BELEVBQVNpQixHQUNwQyxJQUFJQyxFQUFNLEdBQ05ELEVBQUloQyxXQUNOaUMsR0FBTyxjQUFjeEMsT0FBT3VDLEVBQUloQyxTQUFVLFFBRXhDZ0MsRUFBSWxDLFFBQ05tQyxHQUFPLFVBQVV4QyxPQUFPdUMsRUFBSWxDLE1BQU8sT0FFckMsSUFBSU4sT0FBaUMsSUFBZHdDLEVBQUkvQixNQUN2QlQsSUFDRnlDLEdBQU8sU0FBU3hDLE9BQU91QyxFQUFJL0IsTUFBTVAsT0FBUyxFQUFJLElBQUlELE9BQU91QyxFQUFJL0IsT0FBUyxHQUFJLE9BRTVFZ0MsR0FBT0QsRUFBSUMsSUFDUHpDLElBQ0Z5QyxHQUFPLEtBRUxELEVBQUlsQyxRQUNObUMsR0FBTyxLQUVMRCxFQUFJaEMsV0FDTmlDLEdBQU8sS0FFVCxJQUFJQyxFQUFZRixFQUFJRSxVQUNoQkEsR0FBNkIsb0JBQVQzQixPQUN0QjBCLEdBQU8sdURBQXVEeEMsT0FBT2MsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVc0IsTUFBZSxRQUt0SW5CLEVBQVFDLGtCQUFrQmlCLEVBQUtrQyxFQUFjcEQsRUFBUUEsUUFDdkQsQ0FvQk11RCxDQUFNSCxFQUFjcEQsRUFBU2lCLEVBQy9CLEVBQ0FXLE9BQVEsWUFyQlosU0FBNEJ3QixHQUUxQixHQUFnQyxPQUE1QkEsRUFBYUksV0FDZixPQUFPLEVBRVRKLEVBQWFJLFdBQVdDLFlBQVlMLEVBQ3RDLENBZ0JNTSxDQUFtQk4sRUFDckIsRUFFSixDLFVDOUNBckYsRUFBT0UsUUFWUCxTQUEyQmlELEVBQUtrQyxHQUM5QixHQUFJQSxFQUFhTyxXQUNmUCxFQUFhTyxXQUFXQyxRQUFVMUMsTUFDN0IsQ0FDTCxLQUFPa0MsRUFBYVMsWUFDbEJULEVBQWFLLFlBQVlMLEVBQWFTLFlBRXhDVCxFQUFhSixZQUFZVCxTQUFTdUIsZUFBZTVDLEdBQ25ELENBQ0YsQyxjQ1hBNkMsT0FBT0MsZUFBZS9GLEVBQVMsYUFBYyxDQUFFZ0csT0FBTyxJQThidERoRyxFQUFBLFFBN2JlLENBQ1gsQ0FDSWlHLE9BQVEsb0JBQ1JDLFNBQVUsUUFDVkMsWUFBYSxvQ0FFakIsQ0FDSUYsT0FBUSx5QkFDUkMsU0FBVSxRQUNWQyxZQUFhLHFEQUVqQixDQUNJRixPQUFRLHlCQUNSQyxTQUFVLGNBQ1ZDLFlBQWEsMEdBRWpCLENBQ0lGLE9BQVEsZ0NBQ1JDLFNBQVUsY0FDVkMsWUFBYSw0SEFFakIsQ0FDSUYsT0FBUSx1Q0FDUkMsU0FBVSxnQkFDVkMsWUFBYSx1SixzQkN4QnJCLElBQUlDLEVBQW1CaEcsTUFBUUEsS0FBS2dHLGlCQUFvQixTQUFVQyxHQUM5RCxPQUFRQSxHQUFPQSxFQUFJQyxXQUFjRCxFQUFNLENBQUUsUUFBV0EsRUFDeEQsRUFDQVAsT0FBT0MsZUFBZS9GLEVBQVMsYUFBYyxDQUFFZ0csT0FBTyxJQUN0RCxFQUFRLEtBQ1IsTUFBTU8sRUFBV0gsRUFBZ0IsRUFBUSxNQUN6Q0ksTUFBTSw0TEFDTixNQUFNQyxFQUFRbkMsU0FBU0MsY0FBYyxVQUMvQm1DLEVBQWtCcEMsU0FBU0MsY0FBYyxXQUN6Q29DLEVBQVlyQyxTQUFTQyxjQUFjLGVBQ25DcUMsRUFBUXRDLFNBQVNDLGNBQWMsc0JBQy9Cc0MsRUFBZ0J2QyxTQUFTQyxjQUFjLG9CQUN2Q3VDLEVBQWF4QyxTQUFTVyxjQUFjLFVBQzFDNkIsRUFBV0MsWUFBYyxPQUN6QnpDLFNBQVMwQyxLQUFLQyxPQUFPSCxHQUNyQixJQUFJSSxHQUFjLEVBQ2RDLEVBQWVDLFNBQVNDLGFBQWFDLFFBQVEsZ0JBQWlCLEtBQU8sRUFDekUsU0FBU0MsRUFBVUMsR0FDZmYsRUFBTWdCLFVBQVlsQixFQUFTbUIsUUFBUUYsRUFBYyxHQUFHckIsWUFDcEQsTUFBTXdCLEVBQVVsQixFQUFNbUIsaUJBQWlCckIsRUFBU21CLFFBQVFGLEVBQWMsR0FBR3RCLFVBQ3JFUyxFQUFVcEMsY0FBYyx5QkFDeEJvQyxFQUFVcEMsY0FBYyx3QkFBd0JzRCxVQUFVbEUsT0FBTyx1QkFFckVnRCxFQUFVbUIsU0FBU04sRUFBYyxHQUFHSyxVQUFVRSxJQUFJLHVCQUNsREosRUFBUUssU0FBUzVELElBQ2JBLEVBQU95RCxVQUFVRSxJQUFJLE9BQU8sR0FFcEMsQ0FDQSxTQUFTRSxFQUFNakQsRUFBU2tELEVBQWEsR0FDakMsTUFBTUosRUFBVyxJQUFJOUMsRUFBUW1ELFlBQzdCLElBQUlDLEVBQWVGLEVBQ25CLElBQUssSUFBSXRILEVBQUksRUFBR0EsRUFBSWtILEVBQVNwSCxPQUFRRSxHQUFLLEVBQUcsQ0FDekMsTUFBTXlILEVBQVFQLEVBQVNsSCxHQUNuQnlILEVBQU1DLFdBQWFDLEtBQUtDLGVBQ3hCSCxFQUFNaEQsYUFBYSxZQUFhK0MsR0FDaENBLEdBQWdCLEVBQ1pDLEVBQU1JLGtCQUNOTCxFQUFlSCxFQUFNSSxFQUFPRCxJQUd4QyxDQUNBLE9BQU9BLENBQ1gsQ0FDQSxTQUFTTSxFQUFhMUQsRUFBUzJELEVBQVMsR0FBSUMsRUFBU2xDLEdBQ2pELElBQUkxQixFQUFROEMsVUFBVUUsU0FBU0ssSUFDM0IsTUFBTVEsRUFBT3ZFLFNBQVNXLGNBQWMsT0FDcEM0RCxFQUFLaEIsVUFBVUUsSUFBSSxRQUNuQixNQUFNZSxFQUFZVCxFQUFNVSxhQUFhLGFBQ3JDRixFQUFLeEQsYUFBYSxZQUFheUQsR0FDL0JELEVBQUt4RCxhQUFhLFNBQVV5RCxHQUM1QixNQUFNRSxFQUFVLEdBQUdMLEtBQVVOLEVBQU1ZLFFBQVFDLGlCQUNyQ0MsRUFBVyxLQUFLZCxFQUFNWSxRQUFRQyxpQkFDOUJFLEVBQVM5RSxTQUFTVyxjQUFjLFNBQ3RDbUUsRUFBTzNCLFVBQVksWUFBWXFCLHdCQUFnQ0UsTUFDL0QsTUFBTUssRUFBUS9FLFNBQVNXLGNBQWMsU0FDckNvRSxFQUFNNUIsVUFBWSxZQUFZcUIsdUJBQStCSyxNQUM3RDdFLFNBQVNLLEtBQUtzQyxPQUFPbUMsRUFBUUMsR0FDN0JULEVBQU8zQixPQUFPNEIsR0FDVlIsRUFBTUksaUJBQ05DLEVBQWFMLEVBQU8sTUFBT1EsRUFDL0IsR0FFUixDQUlBLFNBQVNTLEVBQVlDLEdBQ2pCckMsR0FBYyxFQUNkUixFQUFnQmUsVUFBWSxHQUM1QmIsRUFBTVosTUFBUSxHQUNkdUIsRUFBVWdDLEdBQ1Z0QixFQUFNeEIsR0FDTmlDLEVBQWFqQyxFQUNqQixDQVlBLFNBQVMrQyxJQUNMLE1BQU03QixFQUFVbEIsRUFBTW1CLGlCQUFpQnJCLEVBQVNtQixRQUFRUCxFQUFlLEdBQUdqQixVQUN0RXZFLEtBQUtDLFVBQVU2RSxFQUFNbUIsaUJBQWlCaEIsRUFBTVosTUFBTXlELFdBQWE5SCxLQUFLQyxVQUFVK0YsSUFDOUVBLEVBQVFLLFNBQVM1RCxJQUNiQSxFQUFPeUQsVUFBVUUsSUFBSSxPQUNyQjNELEVBQU95RCxVQUFVbEUsT0FBTyxPQUFPLElBRW5DZ0QsRUFBVW1CLFNBQVNYLEVBQWUsR0FBR1UsVUFBVUUsSUFBSSxhQUMvQ2IsR0FDQVAsRUFBVW1CLFNBQVNYLEVBQWUsR0FBR1UsVUFBVUUsSUFBSSx1QkFFdkQyQixZQUFXLEtBQ1B2QyxHQUFnQixFQUNoQm1DLEVBQVluQyxFQUFhLE1BSTdCVixFQUFNb0IsVUFBVUUsSUFBSSxTQUNwQjJCLFlBQVcsS0FDUGpELEVBQU1vQixVQUFVbEUsT0FBTyxRQUFRLEdBQ2hDLEtBRVgsQ0FnQkEsU0FBU2dHLEVBQVdDLEdBQ2hCLE1BQU14RixFQUFTd0YsRUFBTXhGLE9BQ3JCLEdBQUlBLElBQVdxQyxHQUFTbUQsRUFBTXhGLFNBQVdzQyxFQUFpQixDQUN0RCxNQUFNbUQsRUFBV3pGLEVBQU8yRSxhQUFhLGFBQy9CZSxFQUFlckQsRUFBTWxDLGNBQWMsZUFBZXNGLE9BQ2xERSxFQUFnQnJELEVBQWdCbkMsY0FBYyxlQUFlc0YsT0FDN0RHLEVBQVMxRixTQUFTVyxjQUFjLE9BQ3RDK0UsRUFBT2pELFlBQWMsSUFBSStDLEVBQWFiLFFBQVFDLG1CQUFtQlksRUFBYWIsUUFBUUMsaUJBQ3RGYyxFQUFPbkMsVUFBVUUsSUFBSSxnQkFDckIrQixFQUFhakMsVUFBVUUsSUFBSSxXQUMzQitCLEVBQWE3QyxPQUFPK0MsR0FDcEJELEVBQWNsQyxVQUFVRSxJQUFJLGtCQUM1QjZCLEVBQU14RixPQUFPNkYsaUJBQWlCLFlBQVksS0FDdENILEVBQWFqQyxVQUFVbEUsT0FBTyxXQUM5Qm9HLEVBQWNsQyxVQUFVbEUsT0FBTyxrQkFDL0JxRyxFQUFPckcsUUFBUSxHQUV2QixDQUNKLENBOUVBNEQsRUFBVUosR0FDVmMsRUFBTXhCLEdBQ05pQyxFQUFhakMsR0FnRmJBLEVBQU13RCxpQkFBaUIsWUFBYU4sR0FDcENqRCxFQUFnQnVELGlCQUFpQixZQUFhTixHQUM5Q2hELEVBQVVzRCxpQkFBaUIsU0F6RTNCLFNBQXFCTCxHQUNqQixNQUFNeEYsRUFBU3dGLEVBQU14RixPQUNqQkEsRUFBT21CLGFBQWVvQixJQUNsQkEsRUFBVXBDLGNBQWMseUJBQ3hCb0MsRUFBVXBDLGNBQWMsd0JBQXdCc0QsVUFBVWxFLE9BQU8sdUJBRXJFUyxFQUFPeUQsVUFBVUUsSUFBSSx1QkFDckJaLEdBQWdCL0MsRUFBTzJDLFlBQ3ZCdUMsRUFBWW5DLEdBRXBCLElBZ0VBTixFQUFjb0QsaUJBQWlCLFFBQVNULEdBQ3hDMUMsRUFBV21ELGlCQUFpQixTQS9CNUIsWUFWQSxTQUFnQkMsR0FDWixJQUFJdEosRUFBSSxFQUNSLE1BQU11SixFQUFhQyxhQUFZLEtBQzNCeEQsRUFBTVosT0FBU2tFLEVBQUt0SixHQUNwQkEsR0FBSyxFQUNEQSxJQUFNc0osRUFBS3hKLFFBQ1gySixjQUFjRixFQUNsQixHQUNELElBQ1AsQ0FHSUcsQ0FEaUIvRCxFQUFTbUIsUUFBUVAsRUFBZSxHQUFHakIsVUFFcERnQixHQUFjLENBQ2xCLElBNEJBTixFQUFNcUQsaUJBQWlCLFdBQVlMLElBQ2IsVUFBZEEsRUFBTVcsS0FDTmYsR0FDSixJQUVKaEYsT0FBT3lGLGlCQUFpQixnQkFieEIsV0FDSTVDLGFBQWFtRCxRQUFRLGVBQWdCckQsRUFDekMsRyxHQ2pKSXNELEVBQTJCLENBQUMsRUFHaEMsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQnpKLElBQWpCMEosRUFDSCxPQUFPQSxFQUFhNUssUUFHckIsSUFBSUYsRUFBUzJLLEVBQXlCRSxHQUFZLENBQ2pENUssR0FBSTRLLEVBRUozSyxRQUFTLENBQUMsR0FPWCxPQUhBNkssRUFBb0JGLEdBQVVHLEtBQUtoTCxFQUFPRSxRQUFTRixFQUFRQSxFQUFPRSxRQUFTMEssR0FHcEU1SyxFQUFPRSxPQUNmLENDckJBMEssRUFBb0JLLEVBQUtqTCxJQUN4QixJQUFJa0wsRUFBU2xMLEdBQVVBLEVBQU93RyxXQUM3QixJQUFPeEcsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREE0SyxFQUFvQk8sRUFBRUQsRUFBUSxDQUFFRSxFQUFHRixJQUM1QkEsQ0FBTSxFQ0xkTixFQUFvQk8sRUFBSSxDQUFDakwsRUFBU21MLEtBQ2pDLElBQUksSUFBSVosS0FBT1ksRUFDWFQsRUFBb0JVLEVBQUVELEVBQVlaLEtBQVNHLEVBQW9CVSxFQUFFcEwsRUFBU3VLLElBQzVFekUsT0FBT0MsZUFBZS9GLEVBQVN1SyxFQUFLLENBQUVjLFlBQVksRUFBTUMsSUFBS0gsRUFBV1osSUFFMUUsRUNOREcsRUFBb0JVLEVBQUksQ0FBQ3BJLEVBQUt1SSxJQUFVekYsT0FBTzBGLFVBQVVDLGVBQWVYLEtBQUs5SCxFQUFLdUksR0NDbEZiLEVBQW9CZ0IsRUFBSzFMLElBQ0gsb0JBQVgyTCxRQUEwQkEsT0FBT0MsYUFDMUM5RixPQUFPQyxlQUFlL0YsRUFBUzJMLE9BQU9DLFlBQWEsQ0FBRTVGLE1BQU8sV0FFN0RGLE9BQU9DLGVBQWUvRixFQUFTLGFBQWMsQ0FBRWdHLE9BQU8sR0FBTyxFQ0w5RDBFLEVBQW9CbUIsUUFBSzNLLEVDR0N3SixFQUFvQixJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9zcmMvZ2xvYmFsLmNzcyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL3NyYy9nbG9iYWwuY3NzP2QzYmMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL3NyYy9kYXRhL2xldmVscy50cyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy8uL3NyYy9pbmRleC50cyIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vcnNzLWNzcy1zZWxlY3RvcnMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3Jzcy1jc3Mtc2VsZWN0b3JzL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9yc3MtY3NzLXNlbGVjdG9ycy93ZWJwYWNrL3N0YXJ0dXAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHkge1xuICBiYWNrZ3JvdW5kOiByZ2IoNDIsIDM0LCAyOCk7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogI2EyYTJhMjtcbn1cblxuXG4ubWFpbi1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiA4NSU7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG59IFxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogY2FsYygydncgKyA1MCUpO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuaDIge1xuICBmb250LXNpemU6IGNhbGMoMS41dncgKyA1MCUpO1xufVxuXG4uYXNpZGUge1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xuICB3aWR0aDogMTUlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiA4NSU7XG4gIGJhY2tncm91bmQ6IHJnYigyNiwgMjUsIDI1KTtcbn1cbi50YWJsZSB7ICBcbiAgd2lkdGg6IG1pbi1jb250ZW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDF2dyAydnc7XG4gIG1hcmdpbjogMnZ3IDAgNXZ3IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogcmdiKDE4NCwgMTE0LCA5KTtcbiAgZ2FwOiAzdnc7XG4gIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoMzUwcHgpIHJvdGF0ZVgoMTVkZWcpO1xuICBib3JkZXItcmFkaXVzOiAwLjN2dztcbiAgYm94LXNoYWRvdzogMHB4IGNhbGMoMjBweCArIDAuOHZ3KSBjYWxjKDVweCArIDAuOHZ3KSByZ2JhKDUsIDUsIDUsIDAuNik7XG59XG5cbi50YWJsZTo6YWZ0ZXIge1xuICBjb250ZW50OiAnJzsgIFxuICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCArIDAuMXZ3KTtcbiAgYm9yZGVyLXRvcDogY2FsYygycHggKyAwLjV2dykgc29saWQgcmdiKDEyNCwgNzYsIDQpO1xuICBib3JkZXItbGVmdDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0OiAxMHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogY2FsYygxMDAlIC0gMC4ydncpO1xuICBsZWZ0OiAwO1xufVxuXG5cblxuIC8qIC50YWJsZSAqOmhvdmVyICovXG4gLmhvdmVyZWQge1xuICBib3gtc2hhZG93OiAwIDAgMTBweCAxMHB4IHJnYmEoMjU1LCAyMDUsIDQyLCAwLjY0NSk7XG59XG5cbi5tYXJrVXAtaG92ZXJlZCB7XG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxNTAlKTtcbn1cblxuXG5cbmJlbnRvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAtMTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiA5dnc7XG4gIGhlaWdodDogNXZ3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTIzLCAxMiwgMTIpO1xuICBib3JkZXItdG9wOiBkb3VibGUgMnZ3IHJnYig2NSwgOSwgOSk7XG4gIGJvcmRlci1ib3R0b206IGRvdWJsZSAydncgcmdiKDY1LCA5LCA5KTtcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IC41cztcbn1cblxuXG5cbnBpY2tsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxNSU7XG4gIGhlaWdodDogMzAlO1xuICBib3JkZXItcmFkaXVzOiA0MHB4O1xuICBiYWNrZ3JvdW5kOiBncmVlbjtcbiAgYm9yZGVyOiBzb2xpZCAycHggcmdiKDQsIDk1LCA0KTtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgOHB4IHJnYig0LCA5NSwgNCk7XG59XG5cbmFwcGxlLCBvcmFuZ2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogM3Z3O1xuICBoZWlnaHQ6IDN2dztcbiAgYm9yZGVyLXJhZGl1czogNDBweDtcbiAgYmFja2dyb3VuZDogcmVkO1xuICBib3JkZXI6IHNvbGlkIDJweCByZ2IoMTY1LCA0LCA0KTtcbiAgYm9yZGVyLXdpZHRoOiAxcHggM3B4IDZweDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYm94LXNoYWRvdzogMHB4IGNhbGMoMnB4ICsgMC4ydncpIDVweCByZ2JhKDAsMCwwLC41KTtcbiAgdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlLW91dDsgXG59XG5cbm9yYW5nZSB7ICBcbiAgYmFja2dyb3VuZDogb3JhbmdlO1xuICBib3JkZXI6IHNvbGlkIDJweCByZ2IoMTU0LCAxMDAsIDApOyAgXG59XG5cbmFwcGxlOjphZnRlcixcbnBpY2tsZTo6YWZ0ZXIsXG5vcmFuZ2U6OmFmdGVyIHtcbiBjb250ZW50OiBcIlwiO1xuIHdpZHRoOiAyNSU7XG4gaGVpZ2h0OiAyNSU7XG4gYm9yZGVyLXJhZGl1czogNTAlO1xuIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiB0b3A6IDEwJTtcbiBsZWZ0OiA1MCU7XG4gYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ5Nik7XG4gdHJhbnNpdGlvbjogYWxsIC41cyBlYXNlLW91dDsgXG59XG5cblxucGxhdGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAtMTA7XG4gIHdpZHRoOiA3dnc7XG4gIGhlaWdodDogN3Z3O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXI6IHNvbGlkIGNhbGMoMXB4ICsgMC4xdncpIHJnYigyMDksIDIwOSwgMjA5KTtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgY2FsYyg0cHggKyAwLjF2dykgcmdiKDIwOSwgMjA5LCAyMDkpO1xuICBib3gtc2hhZG93OiAwcHggY2FsYyg1cHggKyAwLjJ2dykgNXB4IHJnYmEoMCwwLDAsLjIpO1xuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2Utb3V0OyBcbn1cblxuQGtleWZyYW1lcyBwdWxzIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMTAwJSk7XG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDEpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxMTAlKTtcbiAgICBmaWx0ZXI6IGJyaWdodG5lc3MoMS4xKTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEwMCUpO1xuICAgIGZpbHRlcjogYnJpZ2h0bmVzcygxKTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNoYWtlIHtcbiAgMCUge1xuICAgIGxlZnQ6IDJweDtcblxuICB9XG4gIDIwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxuICA0MCUge1xuICAgIGxlZnQ6IC0ycHg7XG4gIH1cbiAgNjAlIHtcbiAgICBsZWZ0OiAwO1xuICB9XG4gIDgwJSB7XG4gICAgbGVmdDogMnB4O1xuICB9XG4gIDEwMCUge1xuICAgIGxlZnQ6IDA7XG4gIH1cblxufVxuXG5cbkBrZXlmcmFtZXMgYXBwZWFyZW5jZSB7XG4gIGZyb217XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxMDAlKTtcbiAgfVxufVxuLmFwcGVhcmVuY2Uge1xuICBhbmltYXRpb246IGFwcGVhcmVuY2UgLjNzIGVhc2UtaW4tb3V0O1xufVxuXG4udGFibGUgKntcbiAgYW5pbWF0aW9uOiBhcHBlYXJlbmNlIC4zcyBlYXNlLWluLW91dDtcbn1cbi50YWJsZSA+IC5wdWxzIHtcbiAgYW5pbWF0aW9uOiBwdWxzIDFzIGVhc2UtaW4tb3V0IGluZmluaXRlLCBhcHBlYXJlbmNlIC4zcyBlYXNlLWluLW91dDtcbn1cblxuLnNoYWtle1xuICBhbmltYXRpb246IHNoYWtlIC4ycyAzIGVhc2UtaW4tb3V0O1xufVxuXG4ucHVscyB7XG4gIGFuaW1hdGlvbjogcHVscyAxcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcbn1cblxuQGtleWZyYW1lcyBzbGlkZU91dCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMDB2aCk7XG4gIH1cbn1cblxuLm91dCB7IFxuICBhbmltYXRpb246IHNsaWRlT3V0IC41cyBlYXNlLWluLW91dCBmb3J3YXJkcztcbn1cblxuLmVkaXRvciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogY2FsYygzMHZ3ICsgMjAlKTtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kOiByZ2IoMjEsIDIxLCAyMSk7XG59XG5cblxuLmh0bWwtdmlld2VyIHtcbiAgYmFja2dyb3VuZDogIzJhMmEyYTtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5saW5lLW51bWJlcnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gIHdpZHRoOiA1JTtcbiAgcGFkZGluZzogNXB4IDEwcHggNXB4IDA7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICBib3JkZXItcmlnaHQ6IHNvbGlkIDJweCBibGFjaztcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4ubWFya3VwIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAvKiBmb250LWZhbWlseTogOyAqL1xuICAvKiBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgKi9cbn1cblxuLm1hcmt1cDo6YmVmb3Jle1xuICBjb250ZW50OiAnPHRhYmxlPic7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG59XG5cbi5tYXJrdXA6OmFmdGVye1xuICBjb250ZW50OiAnPC90YWJsZT4nO1xuICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gIHBhZGRpbmctdG9wOiA1cHg7XG59XG5cbi5saW5lOmhvdmVyIHtcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDE1MCUpO1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5saW5lIHtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwO1xuICBwYWRkaW5nLXRvcDogNXB4O1xuICBwYWRkaW5nLWxlZnQ6IC00MHB4O1xufVxuXG4ubGV2ZWwtbGlzdCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubGV2ZWwtaXRlbSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogNXB4O1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5sZXZlbC1pdGVtX3NlbGVjdGVke1xuICBiYWNrZ3JvdW5kOnJnYmEoMzIsIDMyLCAzMiwgMC45NjYpO1xufVxuXG4ubGV2ZWwtaXRlbTpob3ZlciB7XG4gIGJhY2tncm91bmQ6cmdiYSg0NSwgNDUsIDQ1LCAwLjk2Nik7XG59XG5cbi5jb21wbGV0ZWQge1xuICBjb2xvcjogZ3JlZW47XG59XG5cbi5jb21wbGV0ZWQtd2l0aC1oZWxwIHtcbiAgY29sb3I6IHllbGxvdztcbn1cblxuLmZvb3RlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDg1JTtcbiAgcGFkZGluZzogMTVweCAydnc7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xufVxuXG5mb290ZXIgLmNvcHlyaWdodCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgY29sb3I6ICM1YjViNWI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbmZvb3RlciAuY29weXJpZ2h0IGEge1xuICBjb2xvcjogIzZlNmM2YztcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IDAuMnM7XG59XG5mb290ZXIgLmNvcHlyaWdodCBhOmhvdmVyIHtcbiAgY29sb3I6ICNhMmEyYTI7XG59XG5mb290ZXIgLmNvcHlyaWdodDpiZWZvcmUge1xuICBjb250ZW50OiAnwqknO1xufVxuXG4ubGluay1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDEwcHg7XG4gIGNvbG9yOiAjNmU2YzZjO1xufVxuXG4ucnNzLWxpbmsge1xuICB3aWR0aDogMTEwcHg7XG4gIGhlaWdodDogNDVweDtcbiAgLyogYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL3NyYy9hc3NldHMvaWNvbnMvcnNzLnN2Zyk7ICovXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IDAuMnM7XG59XG5cbi5naXRodWItbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDM1cHg7XG4gIGhlaWdodDogMzVweDtcbiAgLyogYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL3NyYy9hc3NldHMvaWNvbnMvbG9nby1naXRodWIuc3ZnKTsgKi9cbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IDAuMnM7XG59XG5cblxuLnJzcy1saW5rOmhvdmVyLFxuLmdpdGh1Yi1saW5rOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEyMCUpO1xufVxuXG4ubm90aWZpY2F0aW9uIHtcbiAgYmFja2dyb3VuZDogcmdiKDIyNywgMTk0LCAxMzEpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDEwO1xuICBtaW4td2lkdGg6IG1heC1jb250ZW50O1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgYm90dG9tOiBjYWxjKDZ2dyArIDQwJSk7XG4gIGxlZnQ6IDUwJTtcbiAgYm9yZGVyLXJhZGl1czogMC4ydnc7XG4gIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoaW4pO1xuICBjb2xvcjogYmxhY2s7XG4gIGZvbnQtc2l6ZTogY2FsYygxdncgKyAyMCUpO1xufSBgLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9nbG9iYWwuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsMkJBQTJCO0VBQzNCLHlDQUF5QztFQUN6QyxjQUFjO0FBQ2hCOzs7QUFHQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsOEJBQThCO0VBQzlCLG1CQUFtQjtFQUNuQixVQUFVO0VBQ1YsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QiwyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixZQUFZO0VBQ1osZUFBZTtFQUNmLE1BQU07RUFDTixTQUFTO0VBQ1QsMkJBQTJCO0FBQzdCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsNEJBQTRCO0VBQzVCLFFBQVE7RUFDUiw0Q0FBNEM7RUFDNUMsb0JBQW9CO0VBQ3BCLHVFQUF1RTtBQUN6RTs7QUFFQTtFQUNFLFdBQVc7RUFDWCxnQ0FBZ0M7RUFDaEMsbURBQW1EO0VBQ25ELG1DQUFtQztFQUNuQyxvQ0FBb0M7RUFDcEMsa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2QixPQUFPO0FBQ1Q7Ozs7Q0FJQyxtQkFBbUI7Q0FDbkI7RUFDQyxtREFBbUQ7QUFDckQ7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7Ozs7QUFJQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLHVC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O0FBQ2pCOztBQUVBO0VBQ0Usa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0Usa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsU0FBUztFQUNULE9BQU87QUFDVDs7QUFFQTtFQUNFLGVBQWU7RUFDZixjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxjQUFjO0VBQ2QsZ0NBQWdDO0FBQ2xDO0FBQ0E7RUFDRSxjQUFjO0FBQ2hCO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWix3REFBd0Q7RUFDeEQsd0JBQXdCO0VBQ3hCLDRCQUE0QjtFQUM1QixnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsV0FBVztFQUNYLFlBQVk7RUFDWixnRUFBZ0U7RUFDaEUsc0JBQXNCO0VBQ3RCLDRCQUE0QjtFQUM1QixnQ0FBZ0M7QUFDbEM7OztBQUdBOztFQUVFLHNCQUFzQjtFQUN0Qix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSw4QkFBOEI7RUFDOUIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsaUJBQWlCO0VBQ2pCLHVCQUF1QjtFQUN2QixTQUFTO0VBQ1Qsb0JBQW9CO0VBQ3BCLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osMEJBQTBCO0FBQzVCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcbiAgYmFja2dyb3VuZDogcmdiKDQyLCAzNCwgMjgpO1xcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XFxuICBjb2xvcjogI2EyYTJhMjtcXG59XFxuXFxuXFxuLm1haW4tY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA4NSU7XFxuICBtaW4taGVpZ2h0OiAxMDAlO1xcbn0gXFxuXFxuaDEge1xcbiAgZm9udC1zaXplOiBjYWxjKDJ2dyArIDUwJSk7XFxuICBtYXJnaW46IDAgYXV0bztcXG59XFxuXFxuaDIge1xcbiAgZm9udC1zaXplOiBjYWxjKDEuNXZ3ICsgNTAlKTtcXG59XFxuXFxuLmFzaWRlIHtcXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgYWxpZ24taXRlbXM6IHN0YXJ0O1xcbiAgd2lkdGg6IDE1JTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDg1JTtcXG4gIGJhY2tncm91bmQ6IHJnYigyNiwgMjUsIDI1KTtcXG59XFxuLnRhYmxlIHsgIFxcbiAgd2lkdGg6IG1pbi1jb250ZW50O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgcGFkZGluZzogMXZ3IDJ2dztcXG4gIG1hcmdpbjogMnZ3IDAgNXZ3IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJhY2tncm91bmQ6IHJnYigxODQsIDExNCwgOSk7XFxuICBnYXA6IDN2dztcXG4gIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoMzUwcHgpIHJvdGF0ZVgoMTVkZWcpO1xcbiAgYm9yZGVyLXJhZGl1czogMC4zdnc7XFxuICBib3gtc2hhZG93OiAwcHggY2FsYygyMHB4ICsgMC44dncpIGNhbGMoNXB4ICsgMC44dncpIHJnYmEoNSwgNSwgNSwgMC42KTtcXG59XFxuXFxuLnRhYmxlOjphZnRlciB7XFxuICBjb250ZW50OiAnJzsgIFxcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHggKyAwLjF2dyk7XFxuICBib3JkZXItdG9wOiBjYWxjKDJweCArIDAuNXZ3KSBzb2xpZCByZ2IoMTI0LCA3NiwgNCk7XFxuICBib3JkZXItbGVmdDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1yaWdodDogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogY2FsYygxMDAlIC0gMC4ydncpO1xcbiAgbGVmdDogMDtcXG59XFxuXFxuXFxuXFxuIC8qIC50YWJsZSAqOmhvdmVyICovXFxuIC5ob3ZlcmVkIHtcXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IDEwcHggcmdiYSgyNTUsIDIwNSwgNDIsIDAuNjQ1KTtcXG59XFxuXFxuLm1hcmtVcC1ob3ZlcmVkIHtcXG4gIGZpbHRlcjogYnJpZ2h0bmVzcygxNTAlKTtcXG59XFxuXFxuXFxuXFxuYmVudG8ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHotaW5kZXg6IC0xO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgd2lkdGg6IDl2dztcXG4gIGhlaWdodDogNXZ3O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEyMywgMTIsIDEyKTtcXG4gIGJvcmRlci10b3A6IGRvdWJsZSAydncgcmdiKDY1LCA5LCA5KTtcXG4gIGJvcmRlci1ib3R0b206IGRvdWJsZSAydncgcmdiKDY1LCA5LCA5KTtcXG4gIHRyYW5zaXRpb246IGFsbCBlYXNlLWluLW91dCAuNXM7XFxufVxcblxcblxcblxcbnBpY2tsZSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiAxNSU7XFxuICBoZWlnaHQ6IDMwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDQwcHg7XFxuICBiYWNrZ3JvdW5kOiBncmVlbjtcXG4gIGJvcmRlcjogc29saWQgMnB4IHJnYig0LCA5NSwgNCk7XFxuICBib3JkZXItYm90dG9tOiBzb2xpZCA4cHggcmdiKDQsIDk1LCA0KTtcXG59XFxuXFxuYXBwbGUsIG9yYW5nZSB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiAzdnc7XFxuICBoZWlnaHQ6IDN2dztcXG4gIGJvcmRlci1yYWRpdXM6IDQwcHg7XFxuICBiYWNrZ3JvdW5kOiByZWQ7XFxuICBib3JkZXI6IHNvbGlkIDJweCByZ2IoMTY1LCA0LCA0KTtcXG4gIGJvcmRlci13aWR0aDogMXB4IDNweCA2cHg7XFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJveC1zaGFkb3c6IDBweCBjYWxjKDJweCArIDAuMnZ3KSA1cHggcmdiYSgwLDAsMCwuNSk7XFxuICB0cmFuc2l0aW9uOiBhbGwgLjVzIGVhc2Utb3V0OyBcXG59XFxuXFxub3JhbmdlIHsgIFxcbiAgYmFja2dyb3VuZDogb3JhbmdlO1xcbiAgYm9yZGVyOiBzb2xpZCAycHggcmdiKDE1NCwgMTAwLCAwKTsgIFxcbn1cXG5cXG5hcHBsZTo6YWZ0ZXIsXFxucGlja2xlOjphZnRlcixcXG5vcmFuZ2U6OmFmdGVyIHtcXG4gY29udGVudDogXFxcIlxcXCI7XFxuIHdpZHRoOiAyNSU7XFxuIGhlaWdodDogMjUlO1xcbiBib3JkZXItcmFkaXVzOiA1MCU7XFxuIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gdG9wOiAxMCU7XFxuIGxlZnQ6IDUwJTtcXG4gYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ5Nik7XFxuIHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZS1vdXQ7IFxcbn1cXG5cXG5cXG5wbGF0ZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgei1pbmRleDogLTEwO1xcbiAgd2lkdGg6IDd2dztcXG4gIGhlaWdodDogN3Z3O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZDogd2hpdGU7XFxuICBib3JkZXI6IHNvbGlkIGNhbGMoMXB4ICsgMC4xdncpIHJnYigyMDksIDIwOSwgMjA5KTtcXG4gIGJvcmRlci1ib3R0b206IHNvbGlkIGNhbGMoNHB4ICsgMC4xdncpIHJnYigyMDksIDIwOSwgMjA5KTtcXG4gIGJveC1zaGFkb3c6IDBweCBjYWxjKDVweCArIDAuMnZ3KSA1cHggcmdiYSgwLDAsMCwuMik7XFxuICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2Utb3V0OyBcXG59XFxuXFxuQGtleWZyYW1lcyBwdWxzIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxMDAlKTtcXG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDEpO1xcbiAgfVxcbiAgNTAlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxMTAlKTtcXG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDEuMSk7XFxuICB9XFxuICAxMDAlIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxMDAlKTtcXG4gICAgZmlsdGVyOiBicmlnaHRuZXNzKDEpO1xcbiAgfVxcbn1cXG5cXG5Aa2V5ZnJhbWVzIHNoYWtlIHtcXG4gIDAlIHtcXG4gICAgbGVmdDogMnB4O1xcblxcbiAgfVxcbiAgMjAlIHtcXG4gICAgbGVmdDogMDtcXG4gIH1cXG4gIDQwJSB7XFxuICAgIGxlZnQ6IC0ycHg7XFxuICB9XFxuICA2MCUge1xcbiAgICBsZWZ0OiAwO1xcbiAgfVxcbiAgODAlIHtcXG4gICAgbGVmdDogMnB4O1xcbiAgfVxcbiAgMTAwJSB7XFxuICAgIGxlZnQ6IDA7XFxuICB9XFxuXFxufVxcblxcblxcbkBrZXlmcmFtZXMgYXBwZWFyZW5jZSB7XFxuICBmcm9te1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgfVxcbiAgdG8ge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEwMCUpO1xcbiAgfVxcbn1cXG4uYXBwZWFyZW5jZSB7XFxuICBhbmltYXRpb246IGFwcGVhcmVuY2UgLjNzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4udGFibGUgKntcXG4gIGFuaW1hdGlvbjogYXBwZWFyZW5jZSAuM3MgZWFzZS1pbi1vdXQ7XFxufVxcbi50YWJsZSA+IC5wdWxzIHtcXG4gIGFuaW1hdGlvbjogcHVscyAxcyBlYXNlLWluLW91dCBpbmZpbml0ZSwgYXBwZWFyZW5jZSAuM3MgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5zaGFrZXtcXG4gIGFuaW1hdGlvbjogc2hha2UgLjJzIDMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5wdWxzIHtcXG4gIGFuaW1hdGlvbjogcHVscyAxcyBlYXNlLWluLW91dCBpbmZpbml0ZTtcXG59XFxuXFxuQGtleWZyYW1lcyBzbGlkZU91dCB7XFxuICBmcm9tIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xcbiAgfVxcbiAgdG8ge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMHZoKTtcXG4gIH1cXG59XFxuXFxuLm91dCB7IFxcbiAgYW5pbWF0aW9uOiBzbGlkZU91dCAuNXMgZWFzZS1pbi1vdXQgZm9yd2FyZHM7XFxufVxcblxcbi5lZGl0b3Ige1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICB3aWR0aDogY2FsYygzMHZ3ICsgMjAlKTtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBiYWNrZ3JvdW5kOiByZ2IoMjEsIDIxLCAyMSk7XFxufVxcblxcblxcbi5odG1sLXZpZXdlciB7XFxuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4ubGluZS1udW1iZXJzIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xcbiAgd2lkdGg6IDUlO1xcbiAgcGFkZGluZzogNXB4IDEwcHggNXB4IDA7XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIGJvcmRlci1yaWdodDogc29saWQgMnB4IGJsYWNrO1xcbiAgZm9udC1zaXplOiAxNnB4O1xcbn1cXG5cXG4ubWFya3VwIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XFxuICAvKiBmb250LWZhbWlseTogOyAqL1xcbiAgLyogYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7ICovXFxufVxcblxcbi5tYXJrdXA6OmJlZm9yZXtcXG4gIGNvbnRlbnQ6ICc8dGFibGU+JztcXG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcXG4gIHBhZGRpbmctdG9wOiAxMHB4O1xcbn1cXG5cXG4ubWFya3VwOjphZnRlcntcXG4gIGNvbnRlbnQ6ICc8L3RhYmxlPic7XFxuICBtYXJnaW4tbGVmdDogLTEwcHg7XFxuICBwYWRkaW5nLXRvcDogNXB4O1xcbn1cXG5cXG4ubGluZTpob3ZlciB7XFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMTUwJSk7XFxuICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcblxcbi5saW5lIHtcXG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcXG4gIHBhZGRpbmctdG9wOiA1cHg7XFxuICBwYWRkaW5nLWxlZnQ6IC00MHB4O1xcbn1cXG5cXG4ubGV2ZWwtbGlzdCB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuLmxldmVsLWl0ZW0ge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDVweDtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuLmxldmVsLWl0ZW1fc2VsZWN0ZWR7XFxuICBiYWNrZ3JvdW5kOnJnYmEoMzIsIDMyLCAzMiwgMC45NjYpO1xcbn1cXG5cXG4ubGV2ZWwtaXRlbTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kOnJnYmEoNDUsIDQ1LCA0NSwgMC45NjYpO1xcbn1cXG5cXG4uY29tcGxldGVkIHtcXG4gIGNvbG9yOiBncmVlbjtcXG59XFxuXFxuLmNvbXBsZXRlZC13aXRoLWhlbHAge1xcbiAgY29sb3I6IHllbGxvdztcXG59XFxuXFxuLmZvb3RlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiA4NSU7XFxuICBwYWRkaW5nOiAxNXB4IDJ2dztcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJvdHRvbTogMDtcXG4gIGxlZnQ6IDA7XFxufVxcblxcbmZvb3RlciAuY29weXJpZ2h0IHtcXG4gIGZvbnQtc2l6ZTogMTRweDtcXG4gIGNvbG9yOiAjNWI1YjViO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5mb290ZXIgLmNvcHlyaWdodCBhIHtcXG4gIGNvbG9yOiAjNmU2YzZjO1xcbiAgdHJhbnNpdGlvbjogYWxsIGVhc2UtaW4tb3V0IDAuMnM7XFxufVxcbmZvb3RlciAuY29weXJpZ2h0IGE6aG92ZXIge1xcbiAgY29sb3I6ICNhMmEyYTI7XFxufVxcbmZvb3RlciAuY29weXJpZ2h0OmJlZm9yZSB7XFxuICBjb250ZW50OiAnwqknO1xcbn1cXG5cXG4ubGluay1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDEwcHg7XFxuICBjb2xvcjogIzZlNmM2YztcXG59XFxuXFxuLnJzcy1saW5rIHtcXG4gIHdpZHRoOiAxMTBweDtcXG4gIGhlaWdodDogNDVweDtcXG4gIC8qIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi9zcmMvYXNzZXRzL2ljb25zL3Jzcy5zdmcpOyAqL1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIHRyYW5zaXRpb246IGFsbCBlYXNlLWluLW91dCAwLjJzO1xcbn1cXG5cXG4uZ2l0aHViLWxpbmsge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDM1cHg7XFxuICBoZWlnaHQ6IDM1cHg7XFxuICAvKiBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vc3JjL2Fzc2V0cy9pY29ucy9sb2dvLWdpdGh1Yi5zdmcpOyAqL1xcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgZWFzZS1pbi1vdXQgMC4ycztcXG59XFxuXFxuXFxuLnJzcy1saW5rOmhvdmVyLFxcbi5naXRodWItbGluazpob3ZlciB7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xcbiAgZmlsdGVyOiBicmlnaHRuZXNzKDEyMCUpO1xcbn1cXG5cXG4ubm90aWZpY2F0aW9uIHtcXG4gIGJhY2tncm91bmQ6IHJnYigyMjcsIDE5NCwgMTMxKTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHotaW5kZXg6IDEwO1xcbiAgbWluLXdpZHRoOiBtYXgtY29udGVudDtcXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xcbiAgYm90dG9tOiBjYWxjKDZ2dyArIDQwJSk7XFxuICBsZWZ0OiA1MCU7XFxuICBib3JkZXItcmFkaXVzOiAwLjJ2dztcXG4gIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoaW4pO1xcbiAgY29sb3I6IGJsYWNrO1xcbiAgZm9udC1zaXplOiBjYWxjKDF2dyArIDIwJSk7XFxufSBcIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9nbG9iYWwuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9nbG9iYWwuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGxldmVscyA9IFtcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgcGxhdGVzJyxcbiAgICAgICAgc2VsZWN0b3I6ICdwbGF0ZScsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnPHBsYXRlPjwvcGxhdGU+XFxuPHBsYXRlPjwvcGxhdGU+JyxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBiZW50byBib3hlcycsXG4gICAgICAgIHNlbGVjdG9yOiAnYmVudG8nLFxuICAgICAgICBib2FyZE1hcmt1cDogJzxiZW50bz48L2JlbnRvPlxcbjxwbGF0ZT48L3BsYXRlPlxcbjxiZW50bz48L2JlbnRvPicsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgZmFuY3kgcGxhdGUnLFxuICAgICAgICBzZWxlY3RvcjogJ3BsYXRlIGFwcGxlJyxcbiAgICAgICAgYm9hcmRNYXJrdXA6ICc8YmVudG8gY2xhc3M9XCJzb21lLWNsYXNzXCI+PC9iZW50bz5cXG48cGxhdGU+XFxuPGFwcGxlIGNsYXNzPVwiY2FzdWFsXCI+PC9hcHBsZT5cXG48L3BsYXRlPlxcbjxhcHBsZT48L2FwcGxlPicsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGRvVGhpczogJ1NlbGVjdCB0aGUgYXBwbGUgb24gdGhlIHBsYXRlJyxcbiAgICAgICAgc2VsZWN0b3I6ICdwbGF0ZSBhcHBsZScsXG4gICAgICAgIGJvYXJkTWFya3VwOiAnPGJlbnRvIGNsYXNzPVwic29tZS1jbGFzc1wiPjxvcmFuZ2U+PC9vcmFuZ2U+PC9iZW50bz5cXG48cGxhdGU+XFxuPGFwcGxlIGNsYXNzPVwiY2FzdWFsXCI+PC9hcHBsZT5cXG48L3BsYXRlPlxcbjxhcHBsZT48L2FwcGxlPiAnLFxuICAgIH0sXG4gICAge1xuICAgICAgICBkb1RoaXM6ICdTZWxlY3QgdGhlIHBpY2tsZSBvbiB0aGUgZmFuY3kgcGxhdGUnLFxuICAgICAgICBzZWxlY3RvcjogJyNmYW5jeSBwaWNrbGUnLFxuICAgICAgICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAgICAgICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDxvcmFuZ2UvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L2JlbnRvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGUgaWQ9XCJmYW5jeVwiPlxcbidcbiAgICAgICAgICAgICsgJyAgICAgIDxwaWNrbGUvPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAgICAgICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICAgPHBpY2tsZS8+XFxuJ1xuICAgICAgICAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgICAgICAgICAgKyAnICAgICcsXG4gICAgfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIHBsYXRlcycsXG4gICAgLy8gICBzZWxlY3RvcjogJ3BsYXRlJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuICAgIDxwbGF0ZS8+XFxuICAgIDxwbGF0ZS8+XFxuICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIGJlbnRvIGJveGVzJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAnYmVudG8nLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4gICAgPGJlbnRvLz5cXG4gICAgPHBsYXRlLz5cXG4gICAgPGJlbnRvLz5cXG4gICAgJyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogJ1NlbGVjdCB0aGUgZmFuY3kgcGxhdGUnLFxuICAgIC8vICAgc2VsZWN0b3I6ICdwbGF0ZSBhcHBsZScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJzxiZW50bz48L2JlbnRvPlxcbjxwbGF0ZT5cXG4gIDxhcHBsZT48L2FwcGxlPlxcbjwvcGxhdGU+XFxuPGFwcGxlPjwvYXBwbGU+JyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogJ1NlbGVjdCB0aGUgYXBwbGUgb24gdGhlIHBsYXRlJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAncGxhdGUgYXBwbGUnLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4gICAgPGJlbnRvLz5cXG4gICAgPHBsYXRlPlxcbiAgICAgIDxhcHBsZS8+XFxuICAgIDwvcGxhdGU+XFxuICAgIDxhcHBsZS8+XFxuICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIHBpY2tsZSBvbiB0aGUgZmFuY3kgcGxhdGUnLFxuICAgIC8vICAgc2VsZWN0b3I6ICcjZmFuY3kgcGlja2xlJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxvcmFuZ2UvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlIGlkPVwiZmFuY3lcIj5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxwaWNrbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPHBpY2tsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBzbWFsbCBhcHBsZXMnLFxuICAgIC8vICAgc2VsZWN0b3I6ICcuc21hbGwnLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBzbWFsbCBvcmFuZ2VzJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAnb3JhbmdlLnNtYWxsJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPGFwcGxlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9iZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L3BsYXRlPicsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIHNtYWxsIG9yYW5nZXMgaW4gdGhlIGJlbnRvcycsXG4gICAgLy8gICBzZWxlY3RvcjogJ2JlbnRvIG9yYW5nZS5zbWFsbCcsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxvcmFuZ2UvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPG9yYW5nZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPG9yYW5nZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgJyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogJ1NlbGVjdCBhbGwgdGhlIHBsYXRlcyBhbmQgYmVudG9zJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAncGxhdGUsYmVudG8nLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGlja2xlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBpY2tsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPHBpY2tsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8cGlja2xlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxwaWNrbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBpY2tsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgYWxsIHRoZSB0aGluZ3MhJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAnKicsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPG9yYW5nZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50by8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPG9yYW5nZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9iZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUgaWQ9XCJmYW5jeVwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IGV2ZXJ5dGhpbmcgb24gYSBwbGF0ZScsXG4gICAgLy8gICBzZWxlY3RvcjogJ3BsYXRlIConLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUgaWQ9XCJmYW5jeVwiPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPG9yYW5nZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPHBpY2tsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8YXBwbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+JyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogXCJTZWxlY3QgZXZlcnkgYXBwbGUgdGhhdCdzIG5leHQgdG8gYSBwbGF0ZVwiLFxuICAgIC8vICAgc2VsZWN0b3I6ICdwbGF0ZSArIGFwcGxlJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9iZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIHBpY2tsZXMgYmVzaWRlIHRoZSBiZW50bycsXG4gICAgLy8gICBzZWxlY3RvcjogJ2JlbnRvIH4gcGlja2xlJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPHBpY2tsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPG9yYW5nZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwaWNrbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxwaWNrbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgJyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogJ1NlbGVjdCB0aGUgYXBwbGUgZGlyZWN0bHkgb24gYSBwbGF0ZScsXG4gICAgLy8gICBzZWxlY3RvcjogJ3BsYXRlID4gYXBwbGUnLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8YmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICAgIDxhcHBsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPGFwcGxlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGFwcGxlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IHRoZSB0b3Agb3JhbmdlJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAncGxhdGUgOmZpcnN0LWNoaWxkJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGlja2xlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIGFwcGxlIGFuZCB0aGUgcGlja2xlIG9uIHRoZSBwbGF0ZXMnLFxuICAgIC8vICAgc2VsZWN0b3I6ICdwbGF0ZSA6b25seS1jaGlsZCcsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxhcHBsZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8cGlja2xlIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8cGlja2xlIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9iZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwaWNrbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBzbWFsbCBhcHBsZSBhbmQgdGhlIHBpY2tsZScsXG4gICAgLy8gICBzZWxlY3RvcjogJy5zbWFsbDpsYXN0LWNoaWxkJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlIGlkPVwiZmFuY3lcIj5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPicsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIDNyZCBwbGF0ZScsXG4gICAgLy8gICBzZWxlY3RvcjogJzpudGgtY2hpbGQoMyknLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4gICAgPHBsYXRlLz5cXG4gICAgPHBsYXRlLz5cXG4gICAgPHBsYXRlLz5cXG4gICAgPHBsYXRlIGlkPVwiZmFuY3lcIi8+XFxuICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIDFzdCBiZW50bycsXG4gICAgLy8gICBzZWxlY3RvcjogJ2JlbnRvOm50aC1sYXN0LWNoaWxkKDMpJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YmVudG8vPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxvcmFuZ2UvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPG9yYW5nZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8b3JhbmdlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50by8+XFxuJ1xuICAgIC8vICAgICArICcgICAgJyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogJ1NlbGVjdCBmaXJzdCBhcHBsZScsXG4gICAgLy8gICBzZWxlY3RvcjogJ2FwcGxlOmZpcnN0LW9mLXR5cGUnLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGFwcGxlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxvcmFuZ2UvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgJyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogJ1NlbGVjdCBhbGwgZXZlbiBwbGF0ZXMnLFxuICAgIC8vICAgc2VsZWN0b3I6ICdwbGF0ZTpudGgtb2YtdHlwZShldmVuKScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlIGlkPVwiZmFuY3lcIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IGV2ZXJ5IDJuZCBwbGF0ZSwgc3RhcnRpbmcgZnJvbSB0aGUgM3JkJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAncGxhdGU6bnRoLW9mLXR5cGUoMm4rMyknLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxwaWNrbGUgY2xhc3M9XCJzbWFsbFwiIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxhcHBsZSAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgc2VsZWN0b3I6ICdhcHBsZTpvbmx5LW9mLXR5cGUnLFxuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBhcHBsZSBvbiB0aGUgbWlkZGxlIHBsYXRlJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlIGlkPVwiZmFuY3lcIj5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxhcHBsZSAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPHBpY2tsZSAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgJyxcbiAgICAvLyB9LFxuICAgIC8vIHtcbiAgICAvLyAgIGRvVGhpczogJ1NlbGVjdCB0aGUgbGFzdCBhcHBsZSBhbmQgb3JhbmdlJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAnLnNtYWxsOmxhc3Qtb2YtdHlwZScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8b3JhbmdlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwaWNrbGUgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGlja2xlIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGFwcGxlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiAnU2VsZWN0IHRoZSBlbXB0eSBiZW50b3MnLFxuICAgIC8vICAgc2VsZWN0b3I6ICdiZW50bzplbXB0eScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50by8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YmVudG8vPicsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIGJpZyBhcHBsZXMnLFxuICAgIC8vICAgc2VsZWN0b3I6ICdhcHBsZTpub3QoLnNtYWxsKScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZSBpZD1cImZhbmN5XCI+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8YXBwbGUgY2xhc3M9XCJzbWFsbFwiIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgICA8YXBwbGUgLz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICAgIDxvcmFuZ2UgY2xhc3M9XCJzbWFsbFwiIC8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGlja2xlIGNsYXNzPVwic21hbGxcIiAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIGl0ZW1zIGZvciBzb21lb25lJyxcbiAgICAvLyAgIHNlbGVjdG9yOiAnW2Zvcl0nLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8YmVudG8+PGFwcGxlIGNsYXNzPVwic21hbGxcIi8+PC9iZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YXBwbGUgZm9yPVwiRXRoYW5cIi8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlIGZvcj1cIkFsaWNlXCI+PHBpY2tsZS8+PC9wbGF0ZT5cXG4nXG4gICAgLy8gICAgICsgJyAgICA8YmVudG8gZm9yPVwiQ2xhcmFcIj48b3JhbmdlLz48L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwaWNrbGUvPicsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6ICdTZWxlY3QgdGhlIHBsYXRlcyBmb3Igc29tZW9uZScsXG4gICAgLy8gICBzZWxlY3RvcjogJ3BsYXRlW2Zvcl0nLFxuICAgIC8vICAgYm9hcmRNYXJrdXA6ICdcXG4nXG4gICAgLy8gICAgICsgJyAgICA8cGxhdGUgZm9yPVwiU2FyYWhcIj48cGlja2xlLz48L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZSBmb3I9XCJMdWtlXCI+PGFwcGxlLz48L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZS8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvIGZvcj1cIlN0ZXZlXCI+PG9yYW5nZS8+PC9iZW50bz5cXG4nXG4gICAgLy8gICAgICsgJyAgICAnLFxuICAgIC8vIH0sXG4gICAgLy8ge1xuICAgIC8vICAgZG9UaGlzOiBcIlNlbGVjdCBWaXRhbHkncyBtZWFsXCIsXG4gICAgLy8gICBzZWxlY3RvcjogJ1tmb3I9Vml0YWx5XScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBmb3I9XCJBbGV4ZWlcIiAvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50byBmb3I9XCJBbGJpbmFcIj48YXBwbGUgLz48L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50byBmb3I9XCJWaXRhbHlcIj48b3JhbmdlLz48L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxwaWNrbGUvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6IFwiU2VsZWN0IHRoZSBpdGVtcyBmb3IgbmFtZXMgdGhhdCBzdGFydCB3aXRoICdTYSdcIixcbiAgICAvLyAgIHNlbGVjdG9yOiAnW2Zvcl49XCJTYVwiXScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxwbGF0ZSBmb3I9XCJTYW1cIj48cGlja2xlLz48L3BsYXRlPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50byBmb3I9XCJTYXJhaFwiPjxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPjwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvIGZvcj1cIk1hcnlcIj48b3JhbmdlLz48L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6IFwiU2VsZWN0IHRoZSBpdGVtcyBmb3IgbmFtZXMgdGhhdCBlbmQgd2l0aCAnYXRvJ1wiLFxuICAgIC8vICAgc2VsZWN0b3I6ICdbZm9yJD1cImF0b1wiXScsXG4gICAgLy8gICBib2FyZE1hcmt1cDogJ1xcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxiZW50byBmb3I9XCJIYXlhdG9cIj48cGlja2xlLz48L2JlbnRvPlxcbidcbiAgICAvLyAgICAgKyAnICAgIDxhcHBsZSBmb3I9XCJSeW90YVwiPjwvYXBwbGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBsYXRlIGZvcj1cIk1pbmF0b1wiPjxvcmFuZ2UvPjwvcGxhdGU+XFxuJ1xuICAgIC8vICAgICArICcgICAgPHBpY2tsZSBjbGFzcz1cInNtYWxsXCIvPlxcbidcbiAgICAvLyAgICAgKyAnICAgICcsXG4gICAgLy8gfSxcbiAgICAvLyB7XG4gICAgLy8gICBkb1RoaXM6IFwiU2VsZWN0IHRoZSBtZWFscyBmb3IgbmFtZXMgdGhhdCBjb250YWluICdvYmInXCIsXG4gICAgLy8gICBzZWxlY3RvcjogJ1tmb3IqPVwib2JiXCJdJyxcbiAgICAvLyAgIGJvYXJkTWFya3VwOiAnXFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvIGZvcj1cIlJvYmJpZVwiPjxhcHBsZSAvPjwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvIGZvcj1cIlRpbW15XCI+PHBpY2tsZSAvPjwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgPGJlbnRvIGZvcj1cIkJvYmJ5XCI+PG9yYW5nZSAvPjwvYmVudG8+XFxuJ1xuICAgIC8vICAgICArICcgICAgJyxcbiAgICAvLyB9LFxuXTtcbmV4cG9ydHMuZGVmYXVsdCA9IGxldmVscztcbiIsIlwidXNlIHN0cmljdFwiO1xuLyogZXNsaW50LWRpc2FibGUgbm8tYWxlcnQgKi9cbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnJlcXVpcmUoXCIuL2dsb2JhbC5jc3NcIik7XG5jb25zdCBsZXZlbHNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9kYXRhL2xldmVsc1wiKSk7XG5hbGVydCgn0JTQvtGA0L7Qs9C+0LkgUmV2aXdlciEgRdGB0LvQuCDRgyDRgtC10LHRjyDQtdGB0YLRjCDRgtCw0LrQsNGPINCy0L7Qt9C80L7QttC90L7RgdGC0YwsINC/0L7QttCw0LvRg9C50YHRgtCwINC+0YLQu9C+0LbQuCDRgdCy0L7RjiDQv9GA0L7QstC10YDQutGDINC00L4g0LLQtdGH0LXRgNCwIDYuMDMuINCR0YPQtNGDINCx0LXQt9C80LXRgNC90L4g0LHQu9Cw0LPQvtC00LDRgNC10L0pKSDQnNC+0LkgZGlzY29yZDogQFNhZEpvZUJyaWdodCM2OTMzOyB0ZWxlZ3JhbTogQHNhZGpvZWJyaWdodCcpO1xuY29uc3QgVEFCTEUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGFibGUnKTtcbmNvbnN0IG1hcmtVcENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYXJrdXAnKTtcbmNvbnN0IGxldmVsTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5sZXZlbC1saXN0Jyk7XG5jb25zdCBpbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jc3MtZWRpdG9yX19pbnB1dCcpO1xuY29uc3QgY2hla2luZ0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jc3MtZWRpdG9yX19idG4nKTtcbmNvbnN0IGhlbHBCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbmhlbHBCdXR0b24udGV4dENvbnRlbnQgPSAnaGVscCc7XG5kb2N1bWVudC5ib2R5LmFwcGVuZChoZWxwQnV0dG9uKTtcbmxldCB3YXNIZWxwVXNlZCA9IGZhbHNlO1xubGV0IGN1cnJlbnRMZXZlbCA9IHBhcnNlSW50KGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50TGV2ZWwnKSwgMTApIHx8IDE7XG5mdW5jdGlvbiBmaWxsVGFibGUobGV2ZWxOdW1iZXIpIHtcbiAgICBUQUJMRS5pbm5lckhUTUwgPSBsZXZlbHNfMS5kZWZhdWx0W2xldmVsTnVtYmVyIC0gMV0uYm9hcmRNYXJrdXA7XG4gICAgY29uc3QgdGFyZ2V0cyA9IFRBQkxFLnF1ZXJ5U2VsZWN0b3JBbGwobGV2ZWxzXzEuZGVmYXVsdFtsZXZlbE51bWJlciAtIDFdLnNlbGVjdG9yKTtcbiAgICBpZiAobGV2ZWxMaXN0LnF1ZXJ5U2VsZWN0b3IoJy5sZXZlbC1pdGVtX3NlbGVjdGVkJykpIHtcbiAgICAgICAgbGV2ZWxMaXN0LnF1ZXJ5U2VsZWN0b3IoJy5sZXZlbC1pdGVtX3NlbGVjdGVkJykuY2xhc3NMaXN0LnJlbW92ZSgnbGV2ZWwtaXRlbV9zZWxlY3RlZCcpO1xuICAgIH1cbiAgICBsZXZlbExpc3QuY2hpbGRyZW5bbGV2ZWxOdW1iZXIgLSAxXS5jbGFzc0xpc3QuYWRkKCdsZXZlbC1pdGVtX3NlbGVjdGVkJyk7XG4gICAgdGFyZ2V0cy5mb3JFYWNoKCh0YXJnZXQpID0+IHtcbiAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3B1bHMnKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIHNldElEKGVsZW1lbnQsIHN0YXJ0SW5kZXggPSAwKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSBbLi4uZWxlbWVudC5jaGlsZE5vZGVzXTtcbiAgICBsZXQgY3VycmVudEluZGV4ID0gc3RhcnRJbmRleDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGNoaWxkID0gY2hpbGRyZW5baV07XG4gICAgICAgIGlmIChjaGlsZC5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHtcbiAgICAgICAgICAgIGNoaWxkLnNldEF0dHJpYnV0ZSgnZWxlbWVudElkJywgY3VycmVudEluZGV4KTtcbiAgICAgICAgICAgIGN1cnJlbnRJbmRleCArPSAxO1xuICAgICAgICAgICAgaWYgKGNoaWxkLmhhc0NoaWxkTm9kZXMoKSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleCA9IHNldElEKGNoaWxkLCBjdXJyZW50SW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjdXJyZW50SW5kZXg7XG59XG5mdW5jdGlvbiBpbnNlcnRNYXJrVXAoZWxlbWVudCwgaW50ZW50ID0gJycsIHBhcmVudCA9IG1hcmtVcENvbnRhaW5lcikge1xuICAgIFsuLi5lbGVtZW50LmNoaWxkcmVuXS5mb3JFYWNoKChjaGlsZCkgPT4ge1xuICAgICAgICBjb25zdCBsaW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGxpbmUuY2xhc3NMaXN0LmFkZCgnbGluZScpO1xuICAgICAgICBjb25zdCBlbGVtZW50SWQgPSBjaGlsZC5nZXRBdHRyaWJ1dGUoJ2VsZW1lbnRJZCcpO1xuICAgICAgICBsaW5lLnNldEF0dHJpYnV0ZSgnZWxlbWVudElkJywgZWxlbWVudElkKTtcbiAgICAgICAgbGluZS5zZXRBdHRyaWJ1dGUoJ3RhZ3RJZCcsIGVsZW1lbnRJZCk7XG4gICAgICAgIGNvbnN0IG9wZW5UYWcgPSBgJHtpbnRlbnR9PCR7Y2hpbGQudGFnTmFtZS50b0xvd2VyQ2FzZSgpfT5gO1xuICAgICAgICBjb25zdCBjbG9zZVRhZyA9IGA8LyR7Y2hpbGQudGFnTmFtZS50b0xvd2VyQ2FzZSgpfT5gO1xuICAgICAgICBjb25zdCBiZWZvcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgICBiZWZvcmUuaW5uZXJIVE1MID0gYFt0YWd0SWQ9XCIke2VsZW1lbnRJZH1cIl06OmJlZm9yZXtjb250ZW50OlwiJHtvcGVuVGFnfVwifWA7XG4gICAgICAgIGNvbnN0IGFmdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgICAgICAgYWZ0ZXIuaW5uZXJIVE1MID0gYFt0YWd0SWQ9XCIke2VsZW1lbnRJZH1cIl06OmFmdGVye2NvbnRlbnQ6XCIke2Nsb3NlVGFnfVwifWA7XG4gICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kKGJlZm9yZSwgYWZ0ZXIpO1xuICAgICAgICBwYXJlbnQuYXBwZW5kKGxpbmUpO1xuICAgICAgICBpZiAoY2hpbGQuaGFzQ2hpbGROb2RlcygpKSB7XG4gICAgICAgICAgICBpbnNlcnRNYXJrVXAoY2hpbGQsICcgICAnLCBsaW5lKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZmlsbFRhYmxlKGN1cnJlbnRMZXZlbCk7XG5zZXRJRChUQUJMRSk7XG5pbnNlcnRNYXJrVXAoVEFCTEUpO1xuZnVuY3Rpb24gY2hhbmdlTGV2ZWwobGV2ZWwpIHtcbiAgICB3YXNIZWxwVXNlZCA9IGZhbHNlO1xuICAgIG1hcmtVcENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICBpbnB1dC52YWx1ZSA9ICcnO1xuICAgIGZpbGxUYWJsZShsZXZlbCk7XG4gICAgc2V0SUQoVEFCTEUpO1xuICAgIGluc2VydE1hcmtVcChUQUJMRSk7XG59XG5mdW5jdGlvbiBjaG9vc2VMZXZlbChldmVudCkge1xuICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICBpZiAodGFyZ2V0LnBhcmVudE5vZGUgPT09IGxldmVsTGlzdCkge1xuICAgICAgICBpZiAobGV2ZWxMaXN0LnF1ZXJ5U2VsZWN0b3IoJy5sZXZlbC1pdGVtX3NlbGVjdGVkJykpIHtcbiAgICAgICAgICAgIGxldmVsTGlzdC5xdWVyeVNlbGVjdG9yKCcubGV2ZWwtaXRlbV9zZWxlY3RlZCcpLmNsYXNzTGlzdC5yZW1vdmUoJ2xldmVsLWl0ZW1fc2VsZWN0ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZCgnbGV2ZWwtaXRlbV9zZWxlY3RlZCcpO1xuICAgICAgICBjdXJyZW50TGV2ZWwgPSArdGFyZ2V0LnRleHRDb250ZW50O1xuICAgICAgICBjaGFuZ2VMZXZlbChjdXJyZW50TGV2ZWwpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNoZWNrQW5zd2VyKCkge1xuICAgIGNvbnN0IHRhcmdldHMgPSBUQUJMRS5xdWVyeVNlbGVjdG9yQWxsKGxldmVsc18xLmRlZmF1bHRbY3VycmVudExldmVsIC0gMV0uc2VsZWN0b3IpO1xuICAgIGlmIChKU09OLnN0cmluZ2lmeShUQUJMRS5xdWVyeVNlbGVjdG9yQWxsKGlucHV0LnZhbHVlLnRyaW0oKSkpID09PSBKU09OLnN0cmluZ2lmeSh0YXJnZXRzKSkge1xuICAgICAgICB0YXJnZXRzLmZvckVhY2goKHRhcmdldCkgPT4ge1xuICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ291dCcpO1xuICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ3B1bHMnKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGxldmVsTGlzdC5jaGlsZHJlbltjdXJyZW50TGV2ZWwgLSAxXS5jbGFzc0xpc3QuYWRkKCdjb21wbGV0ZWQnKTtcbiAgICAgICAgaWYgKHdhc0hlbHBVc2VkKSB7XG4gICAgICAgICAgICBsZXZlbExpc3QuY2hpbGRyZW5bY3VycmVudExldmVsIC0gMV0uY2xhc3NMaXN0LmFkZCgnY29tcGxldGVkLXdpdGgtaGVscCcpO1xuICAgICAgICB9XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY3VycmVudExldmVsICs9IDE7XG4gICAgICAgICAgICBjaGFuZ2VMZXZlbChjdXJyZW50TGV2ZWwpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIFRBQkxFLmNsYXNzTGlzdC5hZGQoJ3NoYWtlJyk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgVEFCTEUuY2xhc3NMaXN0LnJlbW92ZSgnc2hha2UnKTtcbiAgICAgICAgfSwgMjAwKTtcbiAgICB9XG59XG5mdW5jdGlvbiB0eXBlSW4odGV4dCkge1xuICAgIGxldCBpID0gMDtcbiAgICBjb25zdCBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBpbnB1dC52YWx1ZSArPSB0ZXh0W2ldO1xuICAgICAgICBpICs9IDE7XG4gICAgICAgIGlmIChpID09PSB0ZXh0Lmxlbmd0aCkge1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbElkKTtcbiAgICAgICAgfVxuICAgIH0sIDEwMCk7XG59XG5mdW5jdGlvbiBnZXRIZWxwKCkge1xuICAgIGNvbnN0IGhlbHBUZXh0ID0gbGV2ZWxzXzEuZGVmYXVsdFtjdXJyZW50TGV2ZWwgLSAxXS5zZWxlY3RvcjtcbiAgICB0eXBlSW4oaGVscFRleHQpO1xuICAgIHdhc0hlbHBVc2VkID0gdHJ1ZTtcbn1cbmZ1bmN0aW9uIHNob3dOb3RpY2UoZXZlbnQpIHtcbiAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgaWYgKHRhcmdldCAhPT0gVEFCTEUgJiYgZXZlbnQudGFyZ2V0ICE9PSBtYXJrVXBDb250YWluZXIpIHtcbiAgICAgICAgY29uc3QgdGFyZ2V0SWQgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKCdlbGVtZW50SWQnKTtcbiAgICAgICAgY29uc3QgdGFibGVFbGVtZW50ID0gVEFCTEUucXVlcnlTZWxlY3RvcihgW2VsZW1lbnRJZD1cIiR7dGFyZ2V0SWR9XCJdYCk7XG4gICAgICAgIGNvbnN0IG1hcmtVcEVsZW1lbnQgPSBtYXJrVXBDb250YWluZXIucXVlcnlTZWxlY3RvcihgW2VsZW1lbnRJZD1cIiR7dGFyZ2V0SWR9XCJdYCk7XG4gICAgICAgIGNvbnN0IG5vdGljZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBub3RpY2UudGV4dENvbnRlbnQgPSBgPCR7dGFibGVFbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKX0+PC8ke3RhYmxlRWxlbWVudC50YWdOYW1lLnRvTG93ZXJDYXNlKCl9PmA7XG4gICAgICAgIG5vdGljZS5jbGFzc0xpc3QuYWRkKCdub3RpZmljYXRpb24nKTtcbiAgICAgICAgdGFibGVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2hvdmVyZWQnKTtcbiAgICAgICAgdGFibGVFbGVtZW50LmFwcGVuZChub3RpY2UpO1xuICAgICAgICBtYXJrVXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ21hcmtVcC1ob3ZlcmVkJyk7XG4gICAgICAgIGV2ZW50LnRhcmdldC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsICgpID0+IHtcbiAgICAgICAgICAgIHRhYmxlRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdob3ZlcmVkJyk7XG4gICAgICAgICAgICBtYXJrVXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ21hcmtVcC1ob3ZlcmVkJyk7XG4gICAgICAgICAgICBub3RpY2UucmVtb3ZlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHNhdmVHYW1lU3RhdGUoKSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2N1cnJlbnRMZXZlbCcsIGN1cnJlbnRMZXZlbCk7XG59XG5UQUJMRS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBzaG93Tm90aWNlKTtcbm1hcmtVcENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCBzaG93Tm90aWNlKTtcbmxldmVsTGlzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNob29zZUxldmVsKTtcbmNoZWtpbmdCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjaGVja0Fuc3dlcik7XG5oZWxwQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZ2V0SGVscCk7XG5pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgICBjaGVja0Fuc3dlcigpO1xuICAgIH1cbn0pO1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIHNhdmVHYW1lU3RhdGUpO1xuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYwNyk7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwib3B0aW9ucyIsInN0eWxlVGFnVHJhbnNmb3JtIiwic2V0QXR0cmlidXRlcyIsImluc2VydCIsImRvbUFQSSIsImluc2VydFN0eWxlRWxlbWVudCIsImxvY2FscyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZG9UaGlzIiwic2VsZWN0b3IiLCJib2FyZE1hcmt1cCIsIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJsZXZlbHNfMSIsImFsZXJ0IiwiVEFCTEUiLCJtYXJrVXBDb250YWluZXIiLCJsZXZlbExpc3QiLCJpbnB1dCIsImNoZWtpbmdCdXR0b24iLCJoZWxwQnV0dG9uIiwidGV4dENvbnRlbnQiLCJib2R5IiwiYXBwZW5kIiwid2FzSGVscFVzZWQiLCJjdXJyZW50TGV2ZWwiLCJwYXJzZUludCIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJmaWxsVGFibGUiLCJsZXZlbE51bWJlciIsImlubmVySFRNTCIsImRlZmF1bHQiLCJ0YXJnZXRzIiwicXVlcnlTZWxlY3RvckFsbCIsImNsYXNzTGlzdCIsImNoaWxkcmVuIiwiYWRkIiwiZm9yRWFjaCIsInNldElEIiwic3RhcnRJbmRleCIsImNoaWxkTm9kZXMiLCJjdXJyZW50SW5kZXgiLCJjaGlsZCIsIm5vZGVUeXBlIiwiTm9kZSIsIkVMRU1FTlRfTk9ERSIsImhhc0NoaWxkTm9kZXMiLCJpbnNlcnRNYXJrVXAiLCJpbnRlbnQiLCJwYXJlbnQiLCJsaW5lIiwiZWxlbWVudElkIiwiZ2V0QXR0cmlidXRlIiwib3BlblRhZyIsInRhZ05hbWUiLCJ0b0xvd2VyQ2FzZSIsImNsb3NlVGFnIiwiYmVmb3JlIiwiYWZ0ZXIiLCJjaGFuZ2VMZXZlbCIsImxldmVsIiwiY2hlY2tBbnN3ZXIiLCJ0cmltIiwic2V0VGltZW91dCIsInNob3dOb3RpY2UiLCJldmVudCIsInRhcmdldElkIiwidGFibGVFbGVtZW50IiwibWFya1VwRWxlbWVudCIsIm5vdGljZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0ZXh0IiwiaW50ZXJ2YWxJZCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsInR5cGVJbiIsImtleSIsInNldEl0ZW0iLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiY2FsbCIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJvIiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsIm5jIl0sInNvdXJjZVJvb3QiOiIifQ==